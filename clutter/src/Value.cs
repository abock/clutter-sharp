// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Value {

		[DllImport("clutter")]
		static extern void clutter_value_set_fixed(IntPtr value, int fixed_);

		public static void SetFixed(GLib.Value value, int fixed_) {
			IntPtr native_value = GLib.Marshaller.StructureToPtrAlloc (value);
			clutter_value_set_fixed(native_value, fixed_);
			value = (GLib.Value) Marshal.PtrToStructure (native_value, typeof (GLib.Value));
			Marshal.FreeHGlobal (native_value);
		}

		[DllImport("clutter")]
		static extern int clutter_value_get_unit(IntPtr value);

		public static int GetUnit(GLib.Value value) {
			IntPtr native_value = GLib.Marshaller.StructureToPtrAlloc (value);
			int raw_ret = clutter_value_get_unit(native_value);
			int ret = raw_ret;
			value = (GLib.Value) Marshal.PtrToStructure (native_value, typeof (GLib.Value));
			Marshal.FreeHGlobal (native_value);
			return ret;
		}

		[DllImport("clutter")]
		static extern void clutter_value_set_unit(IntPtr value, int units);

		public static void SetUnit(GLib.Value value, int units) {
			IntPtr native_value = GLib.Marshaller.StructureToPtrAlloc (value);
			clutter_value_set_unit(native_value, units);
			value = (GLib.Value) Marshal.PtrToStructure (native_value, typeof (GLib.Value));
			Marshal.FreeHGlobal (native_value);
		}

		[DllImport("clutter")]
		static extern int clutter_value_get_fixed(IntPtr value);

		public static int GetFixed(GLib.Value value) {
			IntPtr native_value = GLib.Marshaller.StructureToPtrAlloc (value);
			int raw_ret = clutter_value_get_fixed(native_value);
			int ret = raw_ret;
			value = (GLib.Value) Marshal.PtrToStructure (native_value, typeof (GLib.Value));
			Marshal.FreeHGlobal (native_value);
			return ret;
		}

#endregion
	}
}
