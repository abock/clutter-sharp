// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public  class Rectangle : Clutter.Actor {

		~Rectangle()
		{
			Dispose();
		}

		[Obsolete]
		protected Rectangle(GLib.GType gtype) : base(gtype) {}
		public Rectangle(IntPtr raw) : base(raw) {}

		[DllImport("clutter")]
		static extern IntPtr clutter_rectangle_new();

		public Rectangle () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (Rectangle)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = clutter_rectangle_new();
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_rectangle_new_with_color(ref Clutter.Color color);

		public Rectangle (Clutter.Color color) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (Rectangle)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			Raw = clutter_rectangle_new_with_color(ref color);
		}

		[DllImport("clutter")]
		static extern void clutter_rectangle_get_color(IntPtr raw, ref Clutter.Color color);

		public void GetColor(Clutter.Color color) {
			clutter_rectangle_get_color(Handle, ref color);
		}

		[DllImport("clutter")]
		static extern void clutter_rectangle_set_border_color(IntPtr raw, ref Clutter.Color color);

		public void SetBorderColor(Clutter.Color color) {
			clutter_rectangle_set_border_color(Handle, ref color);
		}

		[DllImport("clutter")]
		static extern uint clutter_rectangle_get_border_width(IntPtr raw);

		[DllImport("clutter")]
		static extern void clutter_rectangle_set_border_width(IntPtr raw, uint width);

		public uint BorderWidth { 
			get {
				uint raw_ret = clutter_rectangle_get_border_width(Handle);
				uint ret = raw_ret;
				return ret;
			}
			set {
				clutter_rectangle_set_border_width(Handle, value);
			}
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_rectangle_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = clutter_rectangle_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("clutter")]
		static extern void clutter_rectangle_get_border_color(IntPtr raw, ref Clutter.Color color);

		public void GetBorderColor(Clutter.Color color) {
			clutter_rectangle_get_border_color(Handle, ref color);
		}

		[DllImport("clutter")]
		static extern void clutter_rectangle_set_color(IntPtr raw, ref Clutter.Color color);

		public void SetColor(Clutter.Color color) {
			clutter_rectangle_set_color(Handle, ref color);
		}

#endregion
	}
}
