// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public  class BehaviourOpacity : Clutter.Behaviour {

		~BehaviourOpacity()
		{
			Dispose();
		}

		[Obsolete]
		protected BehaviourOpacity(GLib.GType gtype) : base(gtype) {}
		public BehaviourOpacity(IntPtr raw) : base(raw) {}

		[DllImport("clutter")]
		static extern IntPtr clutter_behaviour_opacity_new(IntPtr alpha, byte opacity_start, byte opacity_end);

		public BehaviourOpacity (Clutter.Alpha alpha, byte opacity_start, byte opacity_end) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (BehaviourOpacity)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			Raw = clutter_behaviour_opacity_new(alpha == null ? IntPtr.Zero : alpha.Handle, opacity_start, opacity_end);
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_behaviour_opacity_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = clutter_behaviour_opacity_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
