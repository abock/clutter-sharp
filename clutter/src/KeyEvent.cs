// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public struct KeyEvent {

		public Clutter.EventType Type;
		public uint Time;
		public Clutter.EventFlags Flags;
		private IntPtr _stage;
		public Clutter.Stage Stage {
			get {
				return GLib.Object.GetObject(_stage) as Clutter.Stage;
			}
			set {
				_stage = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		private IntPtr _source;
		public Clutter.Actor Source {
			get {
				return GLib.Object.GetObject(_source) as Clutter.Actor;
			}
			set {
				_source = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		public Clutter.ModifierType ModifierState;
		public uint Keyval;
		public ushort HardwareKeycode;
		public char UnicodeValue;

		public static Clutter.KeyEvent Zero = new Clutter.KeyEvent ();

		public static Clutter.KeyEvent New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Clutter.KeyEvent.Zero;
			return (Clutter.KeyEvent) Marshal.PtrToStructure (raw, typeof (Clutter.KeyEvent));
		}

		[DllImport("clutter")]
		static extern uint clutter_key_event_unicode(IntPtr raw);

		public uint Unicode() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			uint raw_ret = clutter_key_event_unicode(this_as_native);
			uint ret = raw_ret;
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		[DllImport("clutter")]
		static extern uint clutter_key_event_symbol(IntPtr raw);

		public uint Symbol() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			uint raw_ret = clutter_key_event_symbol(this_as_native);
			uint ret = raw_ret;
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		[DllImport("clutter")]
		static extern ushort clutter_key_event_code(IntPtr raw);

		public ushort Code() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			ushort raw_ret = clutter_key_event_code(this_as_native);
			ushort ret = raw_ret;
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		static void ReadNative (IntPtr native, ref Clutter.KeyEvent target)
		{
			target = New (native);
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
