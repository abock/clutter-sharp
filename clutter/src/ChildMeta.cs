// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public  class ChildMeta : GLib.Object {

		[Obsolete]
		protected ChildMeta(GLib.GType gtype) : base(gtype) {}
		public ChildMeta(IntPtr raw) : base(raw) {}

		protected ChildMeta() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_child_meta_get_container(IntPtr raw);

		public Clutter.Container Container {
			get  {
				IntPtr raw_ret = clutter_child_meta_get_container(Handle);
				Clutter.Container ret = Clutter.ContainerAdapter.GetObject (raw_ret, false);
				return ret;
			}
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_child_meta_get_actor(IntPtr raw);

		public Clutter.Actor Actor {
			get  {
				IntPtr raw_ret = clutter_child_meta_get_actor(Handle);
				Clutter.Actor ret = GLib.Object.GetObject(raw_ret) as Clutter.Actor;
				return ret;
			}
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_child_meta_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = clutter_child_meta_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
