// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public struct AnyEvent {

		public Clutter.EventType Type;
		public uint Time;
		public Clutter.EventFlags Flags;
		private IntPtr _source;
		public Clutter.Actor Source {
			get {
				return GLib.Object.GetObject(_source) as Clutter.Actor;
			}
			set {
				_source = value == null ? IntPtr.Zero : value.Handle;
			}
		}

		public static Clutter.AnyEvent Zero = new Clutter.AnyEvent ();

		public static Clutter.AnyEvent New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Clutter.AnyEvent.Zero;
			return (Clutter.AnyEvent) Marshal.PtrToStructure (raw, typeof (Clutter.AnyEvent));
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
