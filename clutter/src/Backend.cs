// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public  class Backend : GLib.Object {

		~Backend()
		{
			Dispose();
		}

		[Obsolete]
		protected Backend(GLib.GType gtype) : base(gtype) {}
		public Backend(IntPtr raw) : base(raw) {}

		protected Backend() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport("clutter")]
		static extern uint clutter_backend_get_double_click_distance(IntPtr raw);

		[DllImport("clutter")]
		static extern void clutter_backend_set_double_click_distance(IntPtr raw, uint distance);

		public uint DoubleClickDistance { 
			get {
				uint raw_ret = clutter_backend_get_double_click_distance(Handle);
				uint ret = raw_ret;
				return ret;
			}
			set {
				clutter_backend_set_double_click_distance(Handle, value);
			}
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_backend_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = clutter_backend_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("clutter")]
		static extern double clutter_backend_get_resolution(IntPtr raw);

		[DllImport("clutter")]
		static extern void clutter_backend_set_resolution(IntPtr raw, double dpi);

		public double Resolution { 
			get {
				double raw_ret = clutter_backend_get_resolution(Handle);
				double ret = raw_ret;
				return ret;
			}
			set {
				clutter_backend_set_resolution(Handle, value);
			}
		}

		[DllImport("clutter")]
		static extern uint clutter_backend_get_double_click_time(IntPtr raw);

		[DllImport("clutter")]
		static extern void clutter_backend_set_double_click_time(IntPtr raw, uint msec);

		public uint DoubleClickTime { 
			get {
				uint raw_ret = clutter_backend_get_double_click_time(Handle);
				uint ret = raw_ret;
				return ret;
			}
			set {
				clutter_backend_set_double_click_time(Handle, value);
			}
		}

#endregion
	}
}
