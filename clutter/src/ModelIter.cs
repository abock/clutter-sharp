// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public  class ModelIter : GLib.Object {

		[Obsolete]
		protected ModelIter(GLib.GType gtype) : base(gtype) {}
		public ModelIter(IntPtr raw) : base(raw) {}

		protected ModelIter() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_model_iter_get_model(IntPtr raw);

		[GLib.Property ("model")]
		public Clutter.Model Model {
			get  {
				IntPtr raw_ret = clutter_model_iter_get_model(Handle);
				Clutter.Model ret = GLib.Object.GetObject(raw_ret) as Clutter.Model;
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("model", val);
				val.Dispose ();
			}
		}

		[DllImport("clutter")]
		static extern uint clutter_model_iter_get_row(IntPtr raw);

		[GLib.Property ("row")]
		public uint Row {
			get  {
				uint raw_ret = clutter_model_iter_get_row(Handle);
				uint ret = raw_ret;
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("row", val);
				val.Dispose ();
			}
		}

		[DllImport("clutter")]
		static extern void clutter_model_iter_get_valist(IntPtr raw, IntPtr args);

		public void GetValist(IntPtr args) {
			clutter_model_iter_get_valist(Handle, args);
		}

		[DllImport("clutter")]
		static extern void clutter_model_iter_set_value(IntPtr raw, uint column, IntPtr value);

		public void SetValue(uint column, GLib.Value value) {
			IntPtr native_value = GLib.Marshaller.StructureToPtrAlloc (value);
			clutter_model_iter_set_value(Handle, column, native_value);
			value = (GLib.Value) Marshal.PtrToStructure (native_value, typeof (GLib.Value));
			Marshal.FreeHGlobal (native_value);
		}

		[DllImport("clutter")]
		static extern bool clutter_model_iter_is_first(IntPtr raw);

		public bool IsFirst { 
			get {
				bool raw_ret = clutter_model_iter_is_first(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}

		[DllImport("clutter")]
		static extern void clutter_model_iter_set_valist(IntPtr raw, IntPtr args);

		public void SetValist(IntPtr args) {
			clutter_model_iter_set_valist(Handle, args);
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_model_iter_next(IntPtr raw);

		public Clutter.ModelIter Next() {
			IntPtr raw_ret = clutter_model_iter_next(Handle);
			Clutter.ModelIter ret = GLib.Object.GetObject(raw_ret) as Clutter.ModelIter;
			return ret;
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_model_iter_prev(IntPtr raw);

		public Clutter.ModelIter Prev() {
			IntPtr raw_ret = clutter_model_iter_prev(Handle);
			Clutter.ModelIter ret = GLib.Object.GetObject(raw_ret) as Clutter.ModelIter;
			return ret;
		}

		[DllImport("clutter")]
		static extern void clutter_model_iter_get_value(IntPtr raw, uint column, IntPtr value);

		public void GetValue(uint column, GLib.Value value) {
			IntPtr native_value = GLib.Marshaller.StructureToPtrAlloc (value);
			clutter_model_iter_get_value(Handle, column, native_value);
			value = (GLib.Value) Marshal.PtrToStructure (native_value, typeof (GLib.Value));
			Marshal.FreeHGlobal (native_value);
		}

		[DllImport("clutter")]
		static extern bool clutter_model_iter_is_last(IntPtr raw);

		public bool IsLast { 
			get {
				bool raw_ret = clutter_model_iter_is_last(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}

		[DllImport("clutter")]
		static extern IntPtr clutter_model_iter_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = clutter_model_iter_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
