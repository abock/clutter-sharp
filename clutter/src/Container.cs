// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Clutter {

	using System;

#region Autogenerated code
	public interface Container : GLib.IWrapper {

		event Clutter.ChildNotifyHandler ChildNotify;
		event Clutter.ActorRemovedHandler ActorRemoved;
		event Clutter.ActorAddedHandler ActorAdded;
		void AddValist(Clutter.Actor first_actor, IntPtr var_args);
		void AddActor(Clutter.Actor actor);
		void SortDepthOrder();
		void LowerChild(Clutter.Actor actor, Clutter.Actor sibling);
		void ChildGetProperty(Clutter.Actor child, string property, GLib.Value value);
		void RaiseChild(Clutter.Actor actor, Clutter.Actor sibling);
		void RemoveValist(Clutter.Actor first_actor, IntPtr var_args);
		Clutter.Actor FindChildByName(string child_name);
		Clutter.ChildMeta GetChildMeta(Clutter.Actor actor);
		void RemoveActor(Clutter.Actor actor);
		void Foreach(Clutter.Callback cb);
		GLib.List Children { 
			get;
		}
		void ChildSetProperty(Clutter.Actor child, string property, GLib.Value value);
	}

	[GLib.GInterface (typeof (ContainerAdapter))]
	public interface ContainerImplementor : GLib.IWrapper {

		void Add (Clutter.Actor actor);
		void Remove (Clutter.Actor actor);
		void Foreach (Clutter.Callback cb);
		void Raise (Clutter.Actor actor, Clutter.Actor sibling);
		void Lower (Clutter.Actor actor, Clutter.Actor sibling);
		void SortDepthOrder ();
		void CreateChildMeta (Clutter.Actor actor);
		void DestroyChildMeta (Clutter.Actor actor);
		Clutter.ChildMeta GetChildMeta (Clutter.Actor actor);
	}
#endregion
}
