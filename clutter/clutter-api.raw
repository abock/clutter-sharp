<?xml version="1.0"?>
<api>
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Clutter" library="clutter">
    <enum name="ActorFlags" cname="ClutterActorFlags" gtype="clutter_actor_flags_get_type" type="flags">
      <member cname="CLUTTER_ACTOR_MAPPED" name="Mapped" value="1 &lt;&lt; 1" />
      <member cname="CLUTTER_ACTOR_REALIZED" name="Realized" value="1 &lt;&lt; 2" />
      <member cname="CLUTTER_ACTOR_REACTIVE" name="Reactive" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="DebugFlag" cname="ClutterDebugFlag" type="flags">
      <member cname="CLUTTER_DEBUG_MISC" name="Misc" value="1 &lt;&lt; 0" />
      <member cname="CLUTTER_DEBUG_ACTOR" name="Actor" value="1 &lt;&lt; 1" />
      <member cname="CLUTTER_DEBUG_TEXTURE" name="Texture" value="1 &lt;&lt; 2" />
      <member cname="CLUTTER_DEBUG_EVENT" name="Event" value="1 &lt;&lt; 3" />
      <member cname="CLUTTER_DEBUG_PAINT" name="Paint" value="1 &lt;&lt; 4" />
      <member cname="CLUTTER_DEBUG_GL" name="Gl" value="1 &lt;&lt; 5" />
      <member cname="CLUTTER_DEBUG_ALPHA" name="Alpha" value="1 &lt;&lt; 6" />
      <member cname="CLUTTER_DEBUG_BEHAVIOUR" name="Behaviour" value="1 &lt;&lt; 7" />
      <member cname="CLUTTER_DEBUG_PANGO" name="Pango" value="1 &lt;&lt; 8" />
      <member cname="CLUTTER_DEBUG_BACKEND" name="Backend" value="1 &lt;&lt; 9" />
      <member cname="CLUTTER_DEBUG_SCHEDULER" name="Scheduler" value="1 &lt;&lt; 10" />
      <member cname="CLUTTER_DEBUG_SCRIPT" name="Script" value="1 &lt;&lt; 11" />
      <member cname="CLUTTER_DEBUG_SHADER" name="Shader" value="1 &lt;&lt; 12" />
      <member cname="CLUTTER_DEBUG_MULTISTAGE" name="Multistage" value="1 &lt;&lt; 13" />
    </enum>
    <enum name="EventFlags" cname="ClutterEventFlags" gtype="clutter_event_flags_get_type" type="flags">
      <member cname="CLUTTER_EVENT_FLAG_SYNTHETIC" name="Synthetic" value="1 &lt;&lt; 0" />
    </enum>
    <enum name="EventType" cname="ClutterEventType" gtype="clutter_event_type_get_type" type="enum">
      <member cname="CLUTTER_NOTHING" name="Nothing" />
      <member cname="CLUTTER_KEY_PRESS" name="KeyPress" />
      <member cname="CLUTTER_KEY_RELEASE" name="KeyRelease" />
      <member cname="CLUTTER_MOTION" name="Motion" />
      <member cname="CLUTTER_ENTER" name="Enter" />
      <member cname="CLUTTER_LEAVE" name="Leave" />
      <member cname="CLUTTER_BUTTON_PRESS" name="ButtonPress" />
      <member cname="CLUTTER_BUTTON_RELEASE" name="ButtonRelease" />
      <member cname="CLUTTER_SCROLL" name="Scroll" />
      <member cname="CLUTTER_STAGE_STATE" name="StageState" />
      <member cname="CLUTTER_DESTROY_NOTIFY" name="DestroyNotify" />
      <member cname="CLUTTER_CLIENT_MESSAGE" name="ClientMessage" />
      <member cname="CLUTTER_DELETE" name="Delete" />
    </enum>
    <enum name="FeatureFlags" cname="ClutterFeatureFlags" gtype="clutter_feature_flags_get_type" type="flags">
      <member cname="CLUTTER_FEATURE_TEXTURE_NPOT" name="TextureNpot" value="1 &lt;&lt; 2" />
      <member cname="CLUTTER_FEATURE_SYNC_TO_VBLANK" name="SyncToVblank" value="1 &lt;&lt; 3" />
      <member cname="CLUTTER_FEATURE_TEXTURE_YUV" name="TextureYuv" value="1 &lt;&lt; 4" />
      <member cname="CLUTTER_FEATURE_TEXTURE_READ_PIXELS" name="TextureReadPixels" value="1 &lt;&lt; 5" />
      <member cname="CLUTTER_FEATURE_STAGE_STATIC" name="StageStatic" value="1 &lt;&lt; 6" />
      <member cname="CLUTTER_FEATURE_STAGE_USER_RESIZE" name="StageUserResize" value="1 &lt;&lt; 7" />
      <member cname="CLUTTER_FEATURE_STAGE_CURSOR" name="StageCursor" value="1 &lt;&lt; 8" />
      <member cname="CLUTTER_FEATURE_SHADERS_GLSL" name="ShadersGlsl" value="1 &lt;&lt; 9" />
      <member cname="CLUTTER_FEATURE_OFFSCREEN" name="Offscreen" value="1 &lt;&lt; 10" />
      <member cname="CLUTTER_FEATURE_STAGE_MULTIPLE" name="StageMultiple" value="1 &lt;&lt; 11" />
    </enum>
    <enum name="Gravity" cname="ClutterGravity" gtype="clutter_gravity_get_type" type="enum">
      <member cname="CLUTTER_GRAVITY_NONE" name="None" />
      <member cname="CLUTTER_GRAVITY_NORTH" name="North" />
      <member cname="CLUTTER_GRAVITY_NORTH_EAST" name="NorthEast" />
      <member cname="CLUTTER_GRAVITY_EAST" name="East" />
      <member cname="CLUTTER_GRAVITY_SOUTH_EAST" name="SouthEast" />
      <member cname="CLUTTER_GRAVITY_SOUTH" name="South" />
      <member cname="CLUTTER_GRAVITY_SOUTH_WEST" name="SouthWest" />
      <member cname="CLUTTER_GRAVITY_WEST" name="West" />
      <member cname="CLUTTER_GRAVITY_NORTH_WEST" name="NorthWest" />
      <member cname="CLUTTER_GRAVITY_CENTER" name="Center" />
    </enum>
    <enum name="InitError" cname="ClutterInitError" gtype="clutter_init_error_get_type" type="enum">
      <member cname="CLUTTER_INIT_SUCCESS" name="Success" value="1" />
      <member cname="CLUTTER_INIT_ERROR_UNKNOWN" name="ErrorUnknown" />
      <member cname="CLUTTER_INIT_ERROR_THREADS" name="ErrorThreads" value="-1" />
      <member cname="CLUTTER_INIT_ERROR_BACKEND" name="ErrorBackend" value="-2" />
      <member cname="CLUTTER_INIT_ERROR_INTERNAL" name="ErrorInternal" value="-3" />
    </enum>
    <enum name="ModifierType" cname="ClutterModifierType" gtype="clutter_modifier_type_get_type" type="flags">
      <member cname="CLUTTER_SHIFT_MASK" name="ShiftMask" value="1 &lt;&lt; 0" />
      <member cname="CLUTTER_LOCK_MASK" name="LockMask" value="1 &lt;&lt; 1" />
      <member cname="CLUTTER_CONTROL_MASK" name="ControlMask" value="1 &lt;&lt; 2" />
      <member cname="CLUTTER_MOD1_MASK" name="Mod1Mask" value="1 &lt;&lt; 3" />
      <member cname="CLUTTER_MOD2_MASK" name="Mod2Mask" value="1 &lt;&lt; 4" />
      <member cname="CLUTTER_MOD3_MASK" name="Mod3Mask" value="1 &lt;&lt; 5" />
      <member cname="CLUTTER_MOD4_MASK" name="Mod4Mask" value="1 &lt;&lt; 6" />
      <member cname="CLUTTER_MOD5_MASK" name="Mod5Mask" value="1 &lt;&lt; 7" />
      <member cname="CLUTTER_BUTTON1_MASK" name="Button1Mask" value="1 &lt;&lt; 8" />
      <member cname="CLUTTER_BUTTON2_MASK" name="Button2Mask" value="1 &lt;&lt; 9" />
      <member cname="CLUTTER_BUTTON3_MASK" name="Button3Mask" value="1 &lt;&lt; 10" />
      <member cname="CLUTTER_BUTTON4_MASK" name="Button4Mask" value="1 &lt;&lt; 11" />
      <member cname="CLUTTER_BUTTON5_MASK" name="Button5Mask" value="1 &lt;&lt; 12" />
    </enum>
    <enum name="RequestMode" cname="ClutterRequestMode" gtype="clutter_request_mode_get_type" type="enum">
      <member cname="CLUTTER_REQUEST_HEIGHT_FOR_WIDTH" name="HeightForWidth" />
      <member cname="CLUTTER_REQUEST_WIDTH_FOR_HEIGHT" name="WidthForHeight" />
    </enum>
    <enum name="RotateAxis" cname="ClutterRotateAxis" gtype="clutter_rotate_axis_get_type" type="enum">
      <member cname="CLUTTER_X_AXIS" name="XAxis" />
      <member cname="CLUTTER_Y_AXIS" name="YAxis" />
      <member cname="CLUTTER_Z_AXIS" name="ZAxis" />
    </enum>
    <enum name="RotateDirection" cname="ClutterRotateDirection" gtype="clutter_rotate_direction_get_type" type="enum">
      <member cname="CLUTTER_ROTATE_CW" name="Cw" />
      <member cname="CLUTTER_ROTATE_CCW" name="Ccw" />
    </enum>
    <enum name="ScriptError" cname="ClutterScriptError" gtype="clutter_script_error_get_type" type="enum">
      <member cname="CLUTTER_SCRIPT_ERROR_INVALID_TYPE_FUNCTION" name="TypeFunction" />
      <member cname="CLUTTER_SCRIPT_ERROR_INVALID_PROPERTY" name="Property" />
      <member cname="CLUTTER_SCRIPT_ERROR_INVALID_VALUE" name="Value" />
    </enum>
    <enum name="ScrollDirection" cname="ClutterScrollDirection" gtype="clutter_scroll_direction_get_type" type="enum">
      <member cname="CLUTTER_SCROLL_UP" name="Up" />
      <member cname="CLUTTER_SCROLL_DOWN" name="Down" />
      <member cname="CLUTTER_SCROLL_LEFT" name="Left" />
      <member cname="CLUTTER_SCROLL_RIGHT" name="Right" />
    </enum>
    <enum name="ShaderError" cname="ClutterShaderError" gtype="clutter_shader_error_get_type" type="enum">
      <member cname="CLUTTER_SHADER_ERROR_NO_ASM" name="NoAsm" />
      <member cname="CLUTTER_SHADER_ERROR_NO_GLSL" name="NoGlsl" />
      <member cname="CLUTTER_SHADER_ERROR_COMPILE" name="Compile" />
    </enum>
    <enum name="StageState" cname="ClutterStageState" gtype="clutter_stage_state_get_type" type="flags">
      <member cname="CLUTTER_STAGE_STATE_FULLSCREEN" name="Fullscreen" value="1 &lt;&lt; 1" />
      <member cname="CLUTTER_STAGE_STATE_OFFSCREEN" name="Offscreen" value="1 &lt;&lt; 2" />
      <member cname="CLUTTER_STAGE_STATE_ACTIVATED" name="Activated" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="TextureError" cname="ClutterTextureError" gtype="clutter_texture_error_get_type" type="enum">
      <member cname="CLUTTER_TEXTURE_ERROR_OUT_OF_MEMORY" name="OutOfMemory" />
      <member cname="CLUTTER_TEXTURE_ERROR_NO_YUV" name="NoYuv" />
      <member cname="CLUTTER_TEXTURE_ERROR_BAD_FORMAT" name="BadFormat" />
    </enum>
    <enum name="TextureFlags" cname="ClutterTextureFlags" gtype="clutter_texture_flags_get_type" type="flags">
      <member cname="CLUTTER_TEXTURE_RGB_FLAG_BGR" name="RgbFlagBgr" value="1 &lt;&lt; 1" />
      <member cname="CLUTTER_TEXTURE_RGB_FLAG_PREMULT" name="RgbFlagPremult" value="1 &lt;&lt; 2" />
      <member cname="CLUTTER_TEXTURE_YUV_FLAG_YUV2" name="YuvFlagYuv2" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="TextureQuality" cname="ClutterTextureQuality" gtype="clutter_texture_quality_get_type" type="enum">
      <member cname="CLUTTER_TEXTURE_QUALITY_LOW" name="Low" />
      <member cname="CLUTTER_TEXTURE_QUALITY_MEDIUM" name="Medium" />
      <member cname="CLUTTER_TEXTURE_QUALITY_HIGH" name="High" />
    </enum>
    <enum name="TimelineDirection" cname="ClutterTimelineDirection" gtype="clutter_timeline_direction_get_type" type="enum">
      <member cname="CLUTTER_TIMELINE_FORWARD" name="Forward" />
      <member cname="CLUTTER_TIMELINE_BACKWARD" name="Backward" />
    </enum>
    <callback name="AlphaFunc" cname="ClutterAlphaFunc">
      <return-type type="guint32" />
      <parameters>
        <parameter type="ClutterAlpha*" name="alpha" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="BehaviourForeachFunc" cname="ClutterBehaviourForeachFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="ClutterBehaviour*" name="behaviour" />
        <parameter type="ClutterActor*" name="actor" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="Callback" cname="ClutterCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="ClutterActor*" name="actor" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="EffectCompleteFunc" cname="ClutterEffectCompleteFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="ClutterActor*" name="actor" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ModelFilterFunc" cname="ClutterModelFilterFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="ClutterModel*" name="model" />
        <parameter type="ClutterModelIter*" name="iter" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ModelForeachFunc" cname="ClutterModelForeachFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="ClutterModel*" name="model" />
        <parameter type="ClutterModelIter*" name="iter" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ModelSortFunc" cname="ClutterModelSortFunc">
      <return-type type="gint" />
      <parameters>
        <parameter type="ClutterModel*" name="model" />
        <parameter type="const-GValue*" name="a" />
        <parameter type="const-GValue*" name="b" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ScriptConnectFunc" cname="ClutterScriptConnectFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="ClutterScript*" name="script" />
        <parameter type="GObject*" name="object" />
        <parameter type="const-gchar*" name="signal_name" />
        <parameter type="const-gchar*" name="handler_name" />
        <parameter type="GObject*" name="connect_object" />
        <parameter type="GConnectFlags" name="flags" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <interface name="Container" cname="ClutterContainer">
      <signal name="ActorAdded" cname="actor-added" when="FIRST" field_name="actor_added">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="ActorRemoved" cname="actor-removed" when="FIRST" field_name="actor_removed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="ChildNotify" cname="child-notify" when="FIRST" field_name="child_notify">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </signal>
      <virtual_method name="Add" cname="add">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </virtual_method>
      <virtual_method name="Remove" cname="remove">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </virtual_method>
      <virtual_method name="Foreach" cname="foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </virtual_method>
      <virtual_method name="Raise" cname="raise">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterActor*" name="sibling" />
        </parameters>
      </virtual_method>
      <virtual_method name="Lower" cname="lower">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterActor*" name="sibling" />
        </parameters>
      </virtual_method>
      <virtual_method name="SortDepthOrder" cname="sort_depth_order">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
        </parameters>
      </virtual_method>
      <virtual_method name="CreateChildMeta" cname="create_child_meta">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </virtual_method>
      <virtual_method name="DestroyChildMeta" cname="destroy_child_meta">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetChildMeta" cname="get_child_meta">
        <return-type type="ClutterChildMeta*" />
        <parameters>
          <parameter type="ClutterContainer*" name="container" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </virtual_method>
      <method name="Add" cname="clutter_container_add">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="first_actor" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="AddActor" cname="clutter_container_add_actor">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="AddValist" cname="clutter_container_add_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="first_actor" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="ChildGet" cname="clutter_container_child_get">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="const-gchar*" name="first_prop" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="ChildGetProperty" cname="clutter_container_child_get_property">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="child" />
          <parameter type="const-gchar*" name="property" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="ChildSet" cname="clutter_container_child_set">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="const-gchar*" name="first_prop" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="ChildSetProperty" cname="clutter_container_child_set_property">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="child" />
          <parameter type="const-gchar*" name="property" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="ClassFindChildProperty" cname="clutter_container_class_find_child_property" shared="true">
        <return-type type="GParamSpec*" />
        <parameters>
          <parameter type="GObjectClass*" name="klass" />
          <parameter type="const-gchar*" name="property_name" />
        </parameters>
      </method>
      <method name="ClassListChildProperties" cname="clutter_container_class_list_child_properties" shared="true">
        <return-type type="GParamSpec**" />
        <parameters>
          <parameter type="GObjectClass*" name="klass" />
          <parameter type="guint*" name="n_properties" />
        </parameters>
      </method>
      <method name="FindChildByName" cname="clutter_container_find_child_by_name">
        <return-type type="ClutterActor*" />
        <parameters>
          <parameter type="const-gchar*" name="child_name" />
        </parameters>
      </method>
      <method name="Foreach" cname="clutter_container_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="GetChildMeta" cname="clutter_container_get_child_meta">
        <return-type type="ClutterChildMeta*" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="GetChildren" cname="clutter_container_get_children">
        <return-type type="GList*" />
      </method>
      <method name="GetType" cname="clutter_container_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LowerChild" cname="clutter_container_lower_child">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterActor*" name="sibling" />
        </parameters>
      </method>
      <method name="RaiseChild" cname="clutter_container_raise_child">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterActor*" name="sibling" />
        </parameters>
      </method>
      <method name="Remove" cname="clutter_container_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="first_actor" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="RemoveActor" cname="clutter_container_remove_actor">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="RemoveValist" cname="clutter_container_remove_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="first_actor" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="SortDepthOrder" cname="clutter_container_sort_depth_order">
        <return-type type="void" />
      </method>
    </interface>
    <interface name="Media" cname="ClutterMedia">
      <property name="Uri" cname="uri" type="gchar*" readable="true" writeable="true" />
      <property name="Playing" cname="playing" type="gboolean" readable="true" writeable="true" />
      <property name="Position" cname="position" type="gint" readable="true" writeable="true" />
      <property name="Volume" cname="volume" type="gdouble" readable="true" writeable="true" />
      <property name="CanSeek" cname="can-seek" type="gboolean" readable="true" />
      <property name="BufferPercent" cname="buffer-percent" type="gint" readable="true" />
      <property name="Duration" cname="duration" type="gint" readable="true" />
      <virtual_method name="SetUri" cname="set_uri">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
          <parameter type="const-char*" name="uri" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetPlaying" cname="set_playing">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
          <parameter type="gboolean" name="playing" />
        </parameters>
      </virtual_method>
      <signal name="Eos" cname="eos" when="LAST" field_name="eos">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
        </parameters>
      </signal>
      <virtual_method name="GetPlaying" cname="get_playing">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetPosition" cname="set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
          <parameter type="int" name="position" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPosition" cname="get_position">
        <return-type type="int" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetVolume" cname="set_volume">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
          <parameter type="double" name="volume" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetVolume" cname="get_volume">
        <return-type type="double" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
        </parameters>
      </virtual_method>
      <virtual_method name="CanSeek" cname="can_seek">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetBufferPercent" cname="get_buffer_percent">
        <return-type type="int" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDuration" cname="get_duration">
        <return-type type="int" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
        </parameters>
      </virtual_method>
      <signal name="Error" cname="error" when="LAST" manual="true" field_name="error">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterMedia*" name="media" />
          <parameter type="GError*" name="error" />
        </parameters>
      </signal>
      <method name="GetBufferPercent" cname="clutter_media_get_buffer_percent">
        <return-type type="int" />
      </method>
      <method name="GetCanSeek" cname="clutter_media_get_can_seek">
        <return-type type="gboolean" />
      </method>
      <method name="GetDuration" cname="clutter_media_get_duration">
        <return-type type="int" />
      </method>
      <method name="GetPlaying" cname="clutter_media_get_playing">
        <return-type type="gboolean" />
      </method>
      <method name="GetPosition" cname="clutter_media_get_position">
        <return-type type="int" />
      </method>
      <method name="GetType" cname="clutter_media_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUri" cname="clutter_media_get_uri">
        <return-type type="const-char*" />
      </method>
      <method name="GetVolume" cname="clutter_media_get_volume">
        <return-type type="double" />
      </method>
      <method name="SetFilename" cname="clutter_media_set_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetPlaying" cname="clutter_media_set_playing">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="playing" />
        </parameters>
      </method>
      <method name="SetPosition" cname="clutter_media_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="position" />
        </parameters>
      </method>
      <method name="SetUri" cname="clutter_media_set_uri">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
      <method name="SetVolume" cname="clutter_media_set_volume">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="volume" />
        </parameters>
      </method>
    </interface>
    <interface name="Scriptable" cname="ClutterScriptable">
      <virtual_method name="SetId" cname="set_id">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScriptable*" name="scriptable" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </virtual_method>
      <virtual_method name="ParseCustomNode" cname="parse_custom_node">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterScriptable*" name="scriptable" />
          <parameter type="ClutterScript*" name="script" />
          <parameter type="GValue*" name="value" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="JsonNode*" name="node" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCustomProperty" cname="set_custom_property">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScriptable*" name="scriptable" />
          <parameter type="ClutterScript*" name="script" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </virtual_method>
      <method name="GetId" cname="clutter_scriptable_get_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="clutter_scriptable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ParseCustomNode" cname="clutter_scriptable_parse_custom_node">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterScript*" name="script" />
          <parameter type="GValue*" name="value" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="JsonNode*" name="node" />
        </parameters>
      </method>
      <method name="SetCustomProperty" cname="clutter_scriptable_set_custom_property">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScript*" name="script" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="SetId" cname="clutter_scriptable_set_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="id" />
        </parameters>
      </method>
    </interface>
    <interface name="StageWindow" cname="ClutterStageWindow">
      <virtual_method name="GetWrapper" cname="get_wrapper">
        <return-type type="ClutterActor*" />
        <parameters>
          <parameter type="ClutterStageWindow*" name="stage_window" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetTitle" cname="set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStageWindow*" name="stage_window" />
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetFullscreen" cname="set_fullscreen">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStageWindow*" name="stage_window" />
          <parameter type="gboolean" name="is_fullscreen" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCursorVisible" cname="set_cursor_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStageWindow*" name="stage_window" />
          <parameter type="gboolean" name="cursor_visible" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetUserResizable" cname="set_user_resizable">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStageWindow*" name="stage_window" />
          <parameter type="gboolean" name="is_resizable" />
        </parameters>
      </virtual_method>
      <method name="GetType" cname="clutter_stage_window_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </interface>
    <object name="Actor" cname="ClutterActor" parent="GInitiallyUnowned">
      <field name="Flags" cname="flags" type="guint32" access="public" />
      <field name="PrivateFlags" cname="private_flags" type="guint32" />
      <field name="Priv" cname="priv" type="ClutterActorPrivate*" />
      <property name="X" cname="x" type="gint" readable="true" writeable="true" />
      <property name="Y" cname="y" type="gint" readable="true" writeable="true" />
      <property name="Width" cname="width" type="gint" readable="true" writeable="true" />
      <property name="Height" cname="height" type="gint" readable="true" writeable="true" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="FixedPositionSet" cname="fixed-position-set" type="gboolean" readable="true" writeable="true" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="MinWidthSet" cname="min-width-set" type="gboolean" readable="true" writeable="true" />
      <property name="MinHeightSet" cname="min-height-set" type="gboolean" readable="true" writeable="true" />
      <property name="NaturalWidthSet" cname="natural-width-set" type="gboolean" readable="true" writeable="true" />
      <property name="NaturalHeightSet" cname="natural-height-set" type="gboolean" readable="true" writeable="true" />
      <property name="Allocation" cname="allocation" type="ClutterActorBox" readable="true" />
      <property name="RequestMode" cname="request-mode" type="ClutterRequestMode" readable="true" writeable="true" />
      <property name="Depth" cname="depth" type="gint" readable="true" writeable="true" />
      <property name="Opacity" cname="opacity" type="uchar" readable="true" writeable="true" />
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" />
      <property name="Reactive" cname="reactive" type="gboolean" readable="true" writeable="true" />
      <property name="HasClip" cname="has-clip" type="gboolean" readable="true" />
      <property name="Clip" cname="clip" type="ClutterGeometry" readable="true" writeable="true" />
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" />
      <property name="ScaleX" cname="scale-x" type="gdouble" readable="true" writeable="true" />
      <property name="ScaleY" cname="scale-y" type="gdouble" readable="true" writeable="true" />
      <property name="RotationAngleX" cname="rotation-angle-x" type="gdouble" readable="true" writeable="true" />
      <property name="RotationAngleY" cname="rotation-angle-y" type="gdouble" readable="true" writeable="true" />
      <property name="RotationAngleZ" cname="rotation-angle-z" type="gdouble" readable="true" writeable="true" />
      <property name="RotationCenterX" cname="rotation-center-x" type="ClutterVertex" readable="true" writeable="true" />
      <property name="RotationCenterY" cname="rotation-center-y" type="ClutterVertex" readable="true" writeable="true" />
      <property name="RotationCenterZ" cname="rotation-center-z" type="ClutterVertex" readable="true" writeable="true" />
      <property name="AnchorX" cname="anchor-x" type="gint" readable="true" writeable="true" />
      <property name="AnchorY" cname="anchor-y" type="gint" readable="true" writeable="true" />
      <property name="ShowOnSetParent" cname="show-on-set-parent" type="gboolean" readable="true" writeable="true" />
      <virtual_method name="ShowAll" cname="show_all">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </virtual_method>
      <signal name="Destroy" cname="destroy" when="CLEANUP" field_name="destroy">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="Show" cname="show" when="FIRST" field_name="show">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <virtual_method name="HideAll" cname="hide_all">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </virtual_method>
      <signal name="Hide" cname="hide" when="FIRST" field_name="hide">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="ParentSet" cname="parent-set" when="LAST" field_name="parent_set">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterActor*" name="old_parent" />
        </parameters>
      </signal>
      <signal name="Event" cname="event" when="LAST" field_name="event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="ButtonPressEvent" cname="button-press-event" when="LAST" field_name="button_press_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterButtonEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="ButtonReleaseEvent" cname="button-release-event" when="LAST" field_name="button_release_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterButtonEvent*" name="event" />
        </parameters>
      </signal>
      <virtual_method name="Pick" cname="pick">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredWidth" cname="get_preferred_width">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterUnit" name="for_height" />
          <parameter type="ClutterUnit*" name="min_width_p" />
          <parameter type="ClutterUnit*" name="natural_width_p" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredHeight" cname="get_preferred_height">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterUnit" name="for_width" />
          <parameter type="ClutterUnit*" name="min_height_p" />
          <parameter type="ClutterUnit*" name="natural_height_p" />
        </parameters>
      </virtual_method>
      <virtual_method name="Allocate" cname="allocate">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="const-ClutterActorBox*" name="box" />
          <parameter type="gboolean" name="absolute_origin_changed" />
        </parameters>
      </virtual_method>
      <signal name="ScrollEvent" cname="scroll-event" when="LAST" field_name="scroll_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterScrollEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="KeyPressEvent" cname="key-press-event" when="LAST" field_name="key_press_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterKeyEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="KeyReleaseEvent" cname="key-release-event" when="LAST" field_name="key_release_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterKeyEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="MotionEvent" cname="motion-event" when="LAST" field_name="motion_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterMotionEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="FocusIn" cname="focus-in" when="LAST" field_name="focus_in">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="FocusOut" cname="focus-out" when="LAST" field_name="focus_out">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="EnterEvent" cname="enter-event" when="LAST" field_name="enter_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterCrossingEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="LeaveEvent" cname="leave-event" when="LAST" field_name="leave_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterCrossingEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="CapturedEvent" cname="captured-event" when="LAST" field_name="captured_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="Paint" cname="paint" when="LAST" field_name="paint">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="Realize" cname="realize" when="LAST" field_name="realize">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="Unrealize" cname="unrealize" when="LAST" field_name="unrealize">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <method name="Allocate" cname="clutter_actor_allocate">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterActorBox*" name="box" />
          <parameter type="gboolean" name="absolute_origin_changed" />
        </parameters>
      </method>
      <method name="AllocatePreferredSize" cname="clutter_actor_allocate_preferred_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="absolute_origin_changed" />
        </parameters>
      </method>
      <method name="ApplyRelativeTransformToPoint" cname="clutter_actor_apply_relative_transform_to_point">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="ancestor" />
          <parameter type="const-ClutterVertex*" name="point" />
          <parameter type="ClutterVertex*" name="vertex" />
        </parameters>
      </method>
      <method name="ApplyTransformToPoint" cname="clutter_actor_apply_transform_to_point">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterVertex*" name="point" />
          <parameter type="ClutterVertex*" name="vertex" />
        </parameters>
      </method>
      <method name="Destroy" cname="clutter_actor_destroy">
        <return-type type="void" />
      </method>
      <method name="Event" cname="clutter_actor_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
          <parameter type="gboolean" name="capture" />
        </parameters>
      </method>
      <method name="GetAbsAllocationVertices" cname="clutter_actor_get_abs_allocation_vertices">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterVertex" array="true" name="verts" />
        </parameters>
      </method>
      <method name="GetAllocationBox" cname="clutter_actor_get_allocation_box">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActorBox*" name="box" />
        </parameters>
      </method>
      <method name="GetAllocationCoords" cname="clutter_actor_get_allocation_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x_1" />
          <parameter type="gint*" name="y_1" />
          <parameter type="gint*" name="x_2" />
          <parameter type="gint*" name="y_2" />
        </parameters>
      </method>
      <method name="GetAllocationGeometry" cname="clutter_actor_get_allocation_geometry">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterGeometry*" name="geom" />
        </parameters>
      </method>
      <method name="GetAllocationVertices" cname="clutter_actor_get_allocation_vertices">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="ancestor" />
          <parameter type="ClutterVertex" array="true" name="verts" />
        </parameters>
      </method>
      <method name="GetAnchorPoint" cname="clutter_actor_get_anchor_point">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="anchor_x" />
          <parameter type="gint*" name="anchor_y" />
        </parameters>
      </method>
      <method name="GetAnchorPointu" cname="clutter_actor_get_anchor_pointu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit*" name="anchor_x" />
          <parameter type="ClutterUnit*" name="anchor_y" />
        </parameters>
      </method>
      <method name="GetClip" cname="clutter_actor_get_clip">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="xoff" />
          <parameter type="gint*" name="yoff" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetClipu" cname="clutter_actor_get_clipu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit*" name="xoff" />
          <parameter type="ClutterUnit*" name="yoff" />
          <parameter type="ClutterUnit*" name="width" />
          <parameter type="ClutterUnit*" name="height" />
        </parameters>
      </method>
      <method name="GetDepth" cname="clutter_actor_get_depth">
        <return-type type="gint" />
      </method>
      <method name="GetDepthu" cname="clutter_actor_get_depthu">
        <return-type type="ClutterUnit" />
      </method>
      <method name="GetFixedPositionSet" cname="clutter_actor_get_fixed_position_set">
        <return-type type="gboolean" />
      </method>
      <method name="GetGeometry" cname="clutter_actor_get_geometry">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterGeometry*" name="geometry" />
        </parameters>
      </method>
      <method name="GetGid" cname="clutter_actor_get_gid">
        <return-type type="guint32" />
      </method>
      <method name="GetHeight" cname="clutter_actor_get_height">
        <return-type type="guint" />
      </method>
      <method name="GetHeightu" cname="clutter_actor_get_heightu">
        <return-type type="ClutterUnit" />
      </method>
      <method name="GetName" cname="clutter_actor_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetOpacity" cname="clutter_actor_get_opacity">
        <return-type type="guint8" />
      </method>
      <method name="GetPaintOpacity" cname="clutter_actor_get_paint_opacity">
        <return-type type="guint8" />
      </method>
      <method name="GetPaintVisibility" cname="clutter_actor_get_paint_visibility">
        <return-type type="gboolean" />
      </method>
      <method name="GetParent" cname="clutter_actor_get_parent">
        <return-type type="ClutterActor*" />
      </method>
      <method name="GetPosition" cname="clutter_actor_get_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetPositionu" cname="clutter_actor_get_positionu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit*" name="x" />
          <parameter type="ClutterUnit*" name="y" />
        </parameters>
      </method>
      <method name="GetPreferredHeight" cname="clutter_actor_get_preferred_height">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="for_width" />
          <parameter type="ClutterUnit*" name="min_height_p" />
          <parameter type="ClutterUnit*" name="natural_height_p" />
        </parameters>
      </method>
      <method name="GetPreferredSize" cname="clutter_actor_get_preferred_size">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit*" name="min_width_p" />
          <parameter type="ClutterUnit*" name="min_height_p" />
          <parameter type="ClutterUnit*" name="natural_width_p" />
          <parameter type="ClutterUnit*" name="natural_height_p" />
        </parameters>
      </method>
      <method name="GetPreferredWidth" cname="clutter_actor_get_preferred_width">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="for_height" />
          <parameter type="ClutterUnit*" name="min_width_p" />
          <parameter type="ClutterUnit*" name="natural_width_p" />
        </parameters>
      </method>
      <method name="GetReactive" cname="clutter_actor_get_reactive">
        <return-type type="gboolean" />
      </method>
      <method name="GetRotation" cname="clutter_actor_get_rotation">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="z" />
        </parameters>
      </method>
      <method name="GetRotationu" cname="clutter_actor_get_rotationu">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="ClutterUnit*" name="x" />
          <parameter type="ClutterUnit*" name="y" />
          <parameter type="ClutterUnit*" name="z" />
        </parameters>
      </method>
      <method name="GetRotationx" cname="clutter_actor_get_rotationx">
        <return-type type="ClutterFixed" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="z" />
        </parameters>
      </method>
      <method name="GetScale" cname="clutter_actor_get_scale">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="scale_x" />
          <parameter type="gdouble*" name="scale_y" />
        </parameters>
      </method>
      <method name="GetScalex" cname="clutter_actor_get_scalex">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed*" name="scale_x" />
          <parameter type="ClutterFixed*" name="scale_y" />
        </parameters>
      </method>
      <method name="GetShader" cname="clutter_actor_get_shader">
        <return-type type="ClutterShader*" />
      </method>
      <method name="GetSize" cname="clutter_actor_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="width" />
          <parameter type="guint*" name="height" />
        </parameters>
      </method>
      <method name="GetSizeu" cname="clutter_actor_get_sizeu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit*" name="width" />
          <parameter type="ClutterUnit*" name="height" />
        </parameters>
      </method>
      <method name="GetStage" cname="clutter_actor_get_stage">
        <return-type type="ClutterActor*" />
      </method>
      <method name="GetTransformedPosition" cname="clutter_actor_get_transformed_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetTransformedPositionu" cname="clutter_actor_get_transformed_positionu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit*" name="x" />
          <parameter type="ClutterUnit*" name="y" />
        </parameters>
      </method>
      <method name="GetTransformedSize" cname="clutter_actor_get_transformed_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="width" />
          <parameter type="guint*" name="height" />
        </parameters>
      </method>
      <method name="GetTransformedSizeu" cname="clutter_actor_get_transformed_sizeu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit*" name="width" />
          <parameter type="ClutterUnit*" name="height" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_actor_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="clutter_actor_get_width">
        <return-type type="guint" />
      </method>
      <method name="GetWidthu" cname="clutter_actor_get_widthu">
        <return-type type="ClutterUnit" />
      </method>
      <method name="GetX" cname="clutter_actor_get_x">
        <return-type type="gint" />
      </method>
      <method name="GetXu" cname="clutter_actor_get_xu">
        <return-type type="ClutterUnit" />
      </method>
      <method name="GetY" cname="clutter_actor_get_y">
        <return-type type="gint" />
      </method>
      <method name="GetYu" cname="clutter_actor_get_yu">
        <return-type type="ClutterUnit" />
      </method>
      <method name="HasClip" cname="clutter_actor_has_clip">
        <return-type type="gboolean" />
      </method>
      <method name="Hide" cname="clutter_actor_hide">
        <return-type type="void" />
      </method>
      <method name="HideAll" cname="clutter_actor_hide_all">
        <return-type type="void" />
      </method>
      <method name="IsRotated" cname="clutter_actor_is_rotated">
        <return-type type="gboolean" />
      </method>
      <method name="IsScaled" cname="clutter_actor_is_scaled">
        <return-type type="gboolean" />
      </method>
      <method name="Lower" cname="clutter_actor_lower">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="above" />
        </parameters>
      </method>
      <method name="LowerBottom" cname="clutter_actor_lower_bottom">
        <return-type type="void" />
      </method>
      <method name="MoveAnchorPoint" cname="clutter_actor_move_anchor_point">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="anchor_x" />
          <parameter type="gint" name="anchor_y" />
        </parameters>
      </method>
      <method name="MoveAnchorPointFromGravity" cname="clutter_actor_move_anchor_point_from_gravity">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterGravity" name="gravity" />
        </parameters>
      </method>
      <method name="MoveAnchorPointu" cname="clutter_actor_move_anchor_pointu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="anchor_x" />
          <parameter type="ClutterUnit" name="anchor_y" />
        </parameters>
      </method>
      <method name="MoveBy" cname="clutter_actor_move_by">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="dx" />
          <parameter type="gint" name="dy" />
        </parameters>
      </method>
      <method name="MoveByu" cname="clutter_actor_move_byu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="dx" />
          <parameter type="ClutterUnit" name="dy" />
        </parameters>
      </method>
      <method name="Paint" cname="clutter_actor_paint">
        <return-type type="void" />
      </method>
      <method name="Pick" cname="clutter_actor_pick">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="QueueRedraw" cname="clutter_actor_queue_redraw">
        <return-type type="void" />
      </method>
      <method name="QueueRelayout" cname="clutter_actor_queue_relayout">
        <return-type type="void" />
      </method>
      <method name="Raise" cname="clutter_actor_raise">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="below" />
        </parameters>
      </method>
      <method name="RaiseTop" cname="clutter_actor_raise_top">
        <return-type type="void" />
      </method>
      <method name="Realize" cname="clutter_actor_realize">
        <return-type type="void" />
      </method>
      <method name="RemoveClip" cname="clutter_actor_remove_clip">
        <return-type type="void" />
      </method>
      <method name="Reparent" cname="clutter_actor_reparent">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="new_parent" />
        </parameters>
      </method>
      <method name="SetAnchorPoint" cname="clutter_actor_set_anchor_point">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="anchor_x" />
          <parameter type="gint" name="anchor_y" />
        </parameters>
      </method>
      <method name="SetAnchorPointFromGravity" cname="clutter_actor_set_anchor_point_from_gravity">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterGravity" name="gravity" />
        </parameters>
      </method>
      <method name="SetAnchorPointu" cname="clutter_actor_set_anchor_pointu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="anchor_x" />
          <parameter type="ClutterUnit" name="anchor_y" />
        </parameters>
      </method>
      <method name="SetClip" cname="clutter_actor_set_clip">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="xoff" />
          <parameter type="gint" name="yoff" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetClipu" cname="clutter_actor_set_clipu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="xoff" />
          <parameter type="ClutterUnit" name="yoff" />
          <parameter type="ClutterUnit" name="width" />
          <parameter type="ClutterUnit" name="height" />
        </parameters>
      </method>
      <method name="SetDepth" cname="clutter_actor_set_depth">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="depth" />
        </parameters>
      </method>
      <method name="SetDepthu" cname="clutter_actor_set_depthu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="depth" />
        </parameters>
      </method>
      <method name="SetFixedPositionSet" cname="clutter_actor_set_fixed_position_set">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_set" />
        </parameters>
      </method>
      <method name="SetGeometry" cname="clutter_actor_set_geometry">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterGeometry*" name="geometry" />
        </parameters>
      </method>
      <method name="SetHeight" cname="clutter_actor_set_height">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="height" />
        </parameters>
      </method>
      <method name="SetHeightu" cname="clutter_actor_set_heightu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="height" />
        </parameters>
      </method>
      <method name="SetName" cname="clutter_actor_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetOpacity" cname="clutter_actor_set_opacity">
        <return-type type="void" />
        <parameters>
          <parameter type="guint8" name="opacity" />
        </parameters>
      </method>
      <method name="SetParent" cname="clutter_actor_set_parent">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="parent" />
        </parameters>
      </method>
      <method name="SetPosition" cname="clutter_actor_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetPositionu" cname="clutter_actor_set_positionu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="x" />
          <parameter type="ClutterUnit" name="y" />
        </parameters>
      </method>
      <method name="SetReactive" cname="clutter_actor_set_reactive">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="reactive" />
        </parameters>
      </method>
      <method name="SetRotation" cname="clutter_actor_set_rotation">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="gdouble" name="angle" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="z" />
        </parameters>
      </method>
      <method name="SetRotationu" cname="clutter_actor_set_rotationu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="gdouble" name="angle" />
          <parameter type="ClutterUnit" name="x" />
          <parameter type="ClutterUnit" name="y" />
          <parameter type="ClutterUnit" name="z" />
        </parameters>
      </method>
      <method name="SetRotationx" cname="clutter_actor_set_rotationx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="ClutterFixed" name="angle" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="z" />
        </parameters>
      </method>
      <method name="SetScale" cname="clutter_actor_set_scale">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="scale_x" />
          <parameter type="gdouble" name="scale_y" />
        </parameters>
      </method>
      <method name="SetScalex" cname="clutter_actor_set_scalex">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed" name="scale_x" />
          <parameter type="ClutterFixed" name="scale_y" />
        </parameters>
      </method>
      <method name="SetShader" cname="clutter_actor_set_shader">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterShader*" name="shader" />
        </parameters>
      </method>
      <method name="SetShaderParam" cname="clutter_actor_set_shader_param">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="param" />
          <parameter type="gfloat" name="value" />
        </parameters>
      </method>
      <method name="SetSize" cname="clutter_actor_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetSizeu" cname="clutter_actor_set_sizeu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="width" />
          <parameter type="ClutterUnit" name="height" />
        </parameters>
      </method>
      <method name="SetWidth" cname="clutter_actor_set_width">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="width" />
        </parameters>
      </method>
      <method name="SetWidthu" cname="clutter_actor_set_widthu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="width" />
        </parameters>
      </method>
      <method name="SetX" cname="clutter_actor_set_x">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
        </parameters>
      </method>
      <method name="SetXu" cname="clutter_actor_set_xu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="x" />
        </parameters>
      </method>
      <method name="SetY" cname="clutter_actor_set_y">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetYu" cname="clutter_actor_set_yu">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterUnit" name="y" />
        </parameters>
      </method>
      <method name="ShouldPickPaint" cname="clutter_actor_should_pick_paint">
        <return-type type="gboolean" />
      </method>
      <method name="Show" cname="clutter_actor_show">
        <return-type type="void" />
      </method>
      <method name="ShowAll" cname="clutter_actor_show_all">
        <return-type type="void" />
      </method>
      <method name="TransformStagePoint" cname="clutter_actor_transform_stage_point">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterUnit" name="x" />
          <parameter type="ClutterUnit" name="y" />
          <parameter type="ClutterUnit*" name="x_out" />
          <parameter type="ClutterUnit*" name="y_out" />
        </parameters>
      </method>
      <method name="Unparent" cname="clutter_actor_unparent">
        <return-type type="void" />
      </method>
      <method name="Unrealize" cname="clutter_actor_unrealize">
        <return-type type="void" />
      </method>
    </object>
    <object name="Alpha" cname="ClutterAlpha" parent="GInitiallyUnowned">
      <field name="Priv" cname="priv" type="ClutterAlphaPrivate*" />
      <property name="Timeline" cname="timeline" type="ClutterTimeline" readable="true" writeable="true" />
      <property name="Alpha" cname="alpha" type="guint" readable="true" />
      <virtual_method name="ClutterAlpha1" cname="_clutter_alpha_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterAlpha2" cname="_clutter_alpha_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterAlpha3" cname="_clutter_alpha_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterAlpha4" cname="_clutter_alpha_4">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterAlpha5" cname="_clutter_alpha_5">
        <return-type type="void" />
      </virtual_method>
      <method name="GetAlpha" cname="clutter_alpha_get_alpha">
        <return-type type="guint32" />
      </method>
      <method name="GetTimeline" cname="clutter_alpha_get_timeline">
        <return-type type="ClutterTimeline*" />
      </method>
      <method name="GetType" cname="clutter_alpha_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_alpha_new" />
      <constructor cname="clutter_alpha_new_full">
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
          <parameter type="ClutterAlphaFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </constructor>
      <method name="SetClosure" cname="clutter_alpha_set_closure">
        <return-type type="void" />
        <parameters>
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="SetFunc" cname="clutter_alpha_set_func">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterAlphaFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetTimeline" cname="clutter_alpha_set_timeline">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
        </parameters>
      </method>
    </object>
    <object name="Backend" cname="ClutterBackend" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterBackendPrivate*" />
      <virtual_method name="PreParse" cname="pre_parse">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="PostParse" cname="post_parse">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="CreateStage" cname="create_stage">
        <return-type type="ClutterActor*" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
          <parameter type="ClutterStage*" name="wrapper" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="InitEvents" cname="init_events">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
        </parameters>
      </virtual_method>
      <virtual_method name="InitFeatures" cname="init_features">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddOptions" cname="add_options">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
          <parameter type="GOptionGroup*" name="group" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFeatures" cname="get_features">
        <return-type type="ClutterFeatureFlags" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
        </parameters>
      </virtual_method>
      <virtual_method name="Redraw" cname="redraw">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </virtual_method>
      <virtual_method name="EnsureContext" cname="ensure_context">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBackend*" name="backend" />
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </virtual_method>
      <method name="GetDoubleClickDistance" cname="clutter_backend_get_double_click_distance">
        <return-type type="guint" />
      </method>
      <method name="GetDoubleClickTime" cname="clutter_backend_get_double_click_time">
        <return-type type="guint" />
      </method>
      <method name="GetFontOptions" cname="clutter_backend_get_font_options">
        <return-type type="cairo_font_options_t*" />
      </method>
      <method name="GetResolution" cname="clutter_backend_get_resolution">
        <return-type type="gdouble" />
      </method>
      <method name="GetType" cname="clutter_backend_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetDoubleClickDistance" cname="clutter_backend_set_double_click_distance">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="distance" />
        </parameters>
      </method>
      <method name="SetDoubleClickTime" cname="clutter_backend_set_double_click_time">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="msec" />
        </parameters>
      </method>
      <method name="SetFontOptions" cname="clutter_backend_set_font_options">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_font_options_t*" name="options" />
        </parameters>
      </method>
      <method name="SetResolution" cname="clutter_backend_set_resolution">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="dpi" />
        </parameters>
      </method>
    </object>
    <object name="Behaviour" cname="ClutterBehaviour" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterBehaviourPrivate*" />
      <property name="Alpha" cname="alpha" type="ClutterAlpha" readable="true" writeable="true" />
      <signal name="Applied" cname="applied" when="FIRST" field_name="applied">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBehaviour*" name="behave" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <signal name="Removed" cname="removed" when="FIRST" field_name="removed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBehaviour*" name="behave" />
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </signal>
      <virtual_method name="AlphaNotify" cname="alpha_notify">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBehaviour*" name="behave" />
          <parameter type="guint32" name="alpha_value" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClutterBehaviour1" cname="_clutter_behaviour1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterBehaviour2" cname="_clutter_behaviour2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterBehaviour3" cname="_clutter_behaviour3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterBehaviour4" cname="_clutter_behaviour4">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterBehaviour5" cname="_clutter_behaviour5">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterBehaviour6" cname="_clutter_behaviour6">
        <return-type type="void" />
      </virtual_method>
      <method name="ActorsForeach" cname="clutter_behaviour_actors_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBehaviourForeachFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Apply" cname="clutter_behaviour_apply">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="GetActors" cname="clutter_behaviour_get_actors">
        <return-type type="GSList*" />
      </method>
      <method name="GetAlpha" cname="clutter_behaviour_get_alpha">
        <return-type type="ClutterAlpha*" />
      </method>
      <method name="GetNActors" cname="clutter_behaviour_get_n_actors">
        <return-type type="gint" />
      </method>
      <method name="GetNthActor" cname="clutter_behaviour_get_nth_actor">
        <return-type type="ClutterActor*" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_behaviour_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsApplied" cname="clutter_behaviour_is_applied">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="Remove" cname="clutter_behaviour_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="RemoveAll" cname="clutter_behaviour_remove_all">
        <return-type type="void" />
      </method>
      <method name="SetAlpha" cname="clutter_behaviour_set_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
        </parameters>
      </method>
    </object>
    <object name="BehaviourBspline" cname="ClutterBehaviourBspline" parent="ClutterBehaviour">
      <field name="Priv" cname="priv" type="ClutterBehaviourBsplinePrivate*" />
      <signal name="KnotReached" cname="knot-reached" when="LAST" field_name="knot_reached">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBehaviourBspline*" name="bsplineb" />
          <parameter type="const-ClutterKnot*" name="knot" />
        </parameters>
      </signal>
      <virtual_method name="ClutterBspline1" cname="_clutter_bspline_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterBspline2" cname="_clutter_bspline_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterBspline3" cname="_clutter_bspline_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterBspline4" cname="_clutter_bspline_4">
        <return-type type="void" />
      </virtual_method>
      <implements>
        <interface cname="ClutterScriptable" />
      </implements>
      <method name="Adjust" cname="clutter_behaviour_bspline_adjust">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="offset" />
          <parameter type="ClutterKnot*" name="knot" />
        </parameters>
      </method>
      <method name="AppendKnot" cname="clutter_behaviour_bspline_append_knot">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterKnot*" name="knot" />
        </parameters>
      </method>
      <method name="AppendKnots" cname="clutter_behaviour_bspline_append_knots">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterKnot*" name="first_knot" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="Clear" cname="clutter_behaviour_bspline_clear">
        <return-type type="void" />
      </method>
      <method name="GetOrigin" cname="clutter_behaviour_bspline_get_origin">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterKnot*" name="knot" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_behaviour_bspline_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Join" cname="clutter_behaviour_bspline_join">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBehaviourBspline*" name="bs2" />
        </parameters>
      </method>
      <constructor cname="clutter_behaviour_bspline_new">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="const-ClutterKnot*" name="knots" />
          <parameter type="guint" name="n_knots" />
        </parameters>
      </constructor>
      <method name="SetOrigin" cname="clutter_behaviour_bspline_set_origin">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterKnot*" name="knot" />
        </parameters>
      </method>
      <method name="Split" cname="clutter_behaviour_bspline_split">
        <return-type type="ClutterBehaviour*" />
        <parameters>
          <parameter type="guint" name="offset" />
        </parameters>
      </method>
      <method name="Truncate" cname="clutter_behaviour_bspline_truncate">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="offset" />
        </parameters>
      </method>
    </object>
    <object name="BehaviourDepth" cname="ClutterBehaviourDepth" parent="ClutterBehaviour">
      <field name="Priv" cname="priv" type="ClutterBehaviourDepthPrivate*" />
      <property name="DepthStart" cname="depth-start" type="gint" readable="true" writeable="true" />
      <property name="DepthEnd" cname="depth-end" type="gint" readable="true" writeable="true" />
      <method name="GetBounds" cname="clutter_behaviour_depth_get_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="depth_start" />
          <parameter type="gint*" name="depth_end" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_behaviour_depth_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_behaviour_depth_new">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gint" name="depth_start" />
          <parameter type="gint" name="depth_end" />
        </parameters>
      </constructor>
      <method name="SetBounds" cname="clutter_behaviour_depth_set_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="depth_start" />
          <parameter type="gint" name="depth_end" />
        </parameters>
      </method>
    </object>
    <object name="BehaviourEllipse" cname="ClutterBehaviourEllipse" parent="ClutterBehaviour">
      <field name="Priv" cname="priv" type="ClutterBehaviourEllipsePrivate*" />
      <property name="AngleStart" cname="angle-start" type="gdouble" readable="true" writeable="true" />
      <property name="AngleEnd" cname="angle-end" type="gdouble" readable="true" writeable="true" />
      <property name="AngleTiltX" cname="angle-tilt-x" type="gdouble" readable="true" writeable="true" />
      <property name="AngleTiltY" cname="angle-tilt-y" type="gdouble" readable="true" writeable="true" />
      <property name="AngleTiltZ" cname="angle-tilt-z" type="gdouble" readable="true" writeable="true" />
      <property name="Width" cname="width" type="gint" readable="true" writeable="true" />
      <property name="Height" cname="height" type="gint" readable="true" writeable="true" />
      <property name="Center" cname="center" type="ClutterKnot" readable="true" writeable="true" />
      <property name="Direction" cname="direction" type="ClutterRotateDirection" readable="true" writeable="true" />
      <virtual_method name="KnotReached" cname="knot_reached">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBehaviourEllipse*" name="ellipseb" />
          <parameter type="const-ClutterKnot*" name="knot" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClutterEllipse1" cname="_clutter_ellipse_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterEllipse2" cname="_clutter_ellipse_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterEllipse3" cname="_clutter_ellipse_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterEllipse4" cname="_clutter_ellipse_4">
        <return-type type="void" />
      </virtual_method>
      <method name="GetAngleEnd" cname="clutter_behaviour_ellipse_get_angle_end">
        <return-type type="gdouble" />
      </method>
      <method name="GetAngleEndx" cname="clutter_behaviour_ellipse_get_angle_endx">
        <return-type type="ClutterFixed" />
      </method>
      <method name="GetAngleStart" cname="clutter_behaviour_ellipse_get_angle_start">
        <return-type type="gdouble" />
      </method>
      <method name="GetAngleStartx" cname="clutter_behaviour_ellipse_get_angle_startx">
        <return-type type="ClutterFixed" />
      </method>
      <method name="GetAngleTilt" cname="clutter_behaviour_ellipse_get_angle_tilt">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
        </parameters>
      </method>
      <method name="GetAngleTiltx" cname="clutter_behaviour_ellipse_get_angle_tiltx">
        <return-type type="ClutterFixed" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
        </parameters>
      </method>
      <method name="GetCenter" cname="clutter_behaviour_ellipse_get_center">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetDirection" cname="clutter_behaviour_ellipse_get_direction">
        <return-type type="ClutterRotateDirection" />
      </method>
      <method name="GetHeight" cname="clutter_behaviour_ellipse_get_height">
        <return-type type="gint" />
      </method>
      <method name="GetTilt" cname="clutter_behaviour_ellipse_get_tilt">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="angle_tilt_x" />
          <parameter type="gdouble*" name="angle_tilt_y" />
          <parameter type="gdouble*" name="angle_tilt_z" />
        </parameters>
      </method>
      <method name="GetTiltx" cname="clutter_behaviour_ellipse_get_tiltx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed*" name="angle_tilt_x" />
          <parameter type="ClutterFixed*" name="angle_tilt_y" />
          <parameter type="ClutterFixed*" name="angle_tilt_z" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_behaviour_ellipse_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="clutter_behaviour_ellipse_get_width">
        <return-type type="gint" />
      </method>
      <constructor cname="clutter_behaviour_ellipse_new">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="ClutterRotateDirection" name="direction" />
          <parameter type="gdouble" name="start" />
          <parameter type="gdouble" name="end" />
        </parameters>
      </constructor>
      <constructor cname="clutter_behaviour_ellipse_newx">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="ClutterRotateDirection" name="direction" />
          <parameter type="ClutterFixed" name="start" />
          <parameter type="ClutterFixed" name="end" />
        </parameters>
      </constructor>
      <method name="SetAngleEnd" cname="clutter_behaviour_ellipse_set_angle_end">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="angle_end" />
        </parameters>
      </method>
      <method name="SetAngleEndx" cname="clutter_behaviour_ellipse_set_angle_endx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed" name="angle_end" />
        </parameters>
      </method>
      <method name="SetAngleStart" cname="clutter_behaviour_ellipse_set_angle_start">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="angle_start" />
        </parameters>
      </method>
      <method name="SetAngleStartx" cname="clutter_behaviour_ellipse_set_angle_startx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed" name="angle_start" />
        </parameters>
      </method>
      <method name="SetAngleTilt" cname="clutter_behaviour_ellipse_set_angle_tilt">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="gdouble" name="angle_tilt" />
        </parameters>
      </method>
      <method name="SetAngleTiltx" cname="clutter_behaviour_ellipse_set_angle_tiltx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="ClutterFixed" name="angle_tilt" />
        </parameters>
      </method>
      <method name="SetCenter" cname="clutter_behaviour_ellipse_set_center">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetDirection" cname="clutter_behaviour_ellipse_set_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterRotateDirection" name="direction" />
        </parameters>
      </method>
      <method name="SetHeight" cname="clutter_behaviour_ellipse_set_height">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetTilt" cname="clutter_behaviour_ellipse_set_tilt">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="angle_tilt_x" />
          <parameter type="gdouble" name="angle_tilt_y" />
          <parameter type="gdouble" name="angle_tilt_z" />
        </parameters>
      </method>
      <method name="SetTiltx" cname="clutter_behaviour_ellipse_set_tiltx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed" name="angle_tilt_x" />
          <parameter type="ClutterFixed" name="angle_tilt_y" />
          <parameter type="ClutterFixed" name="angle_tilt_z" />
        </parameters>
      </method>
      <method name="SetWidth" cname="clutter_behaviour_ellipse_set_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
        </parameters>
      </method>
    </object>
    <object name="BehaviourOpacity" cname="ClutterBehaviourOpacity" parent="ClutterBehaviour">
      <field name="Priv" cname="priv" type="ClutterBehaviourOpacityPrivate*" />
      <property name="OpacityStart" cname="opacity-start" type="guint" readable="true" writeable="true" />
      <property name="OpacityEnd" cname="opacity-end" type="guint" readable="true" writeable="true" />
      <method name="GetBounds" cname="clutter_behaviour_opacity_get_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="guint8*" name="opacity_start" />
          <parameter type="guint8*" name="opacity_end" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_behaviour_opacity_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_behaviour_opacity_new">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="guint8" name="opacity_start" />
          <parameter type="guint8" name="opacity_end" />
        </parameters>
      </constructor>
      <method name="SetBounds" cname="clutter_behaviour_opacity_set_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="guint8" name="opacity_start" />
          <parameter type="guint8" name="opacity_end" />
        </parameters>
      </method>
    </object>
    <object name="BehaviourPath" cname="ClutterBehaviourPath" parent="ClutterBehaviour">
      <field name="Priv" cname="priv" type="ClutterBehaviourPathPrivate*" />
      <property name="Knot" cname="knot" type="ClutterKnot" writeable="true" />
      <signal name="KnotReached" cname="knot-reached" when="LAST" field_name="knot_reached">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterBehaviourPath*" name="pathb" />
          <parameter type="const-ClutterKnot*" name="knot" />
        </parameters>
      </signal>
      <virtual_method name="ClutterPath1" cname="_clutter_path_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterPath2" cname="_clutter_path_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterPath3" cname="_clutter_path_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterPath4" cname="_clutter_path_4">
        <return-type type="void" />
      </virtual_method>
      <implements>
        <interface cname="ClutterScriptable" />
      </implements>
      <method name="AppendKnot" cname="clutter_behaviour_path_append_knot">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterKnot*" name="knot" />
        </parameters>
      </method>
      <method name="AppendKnots" cname="clutter_behaviour_path_append_knots">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterKnot*" name="first_knot" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="Clear" cname="clutter_behaviour_path_clear">
        <return-type type="void" />
      </method>
      <method name="GetKnots" cname="clutter_behaviour_path_get_knots">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="clutter_behaviour_path_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertKnot" cname="clutter_behaviour_path_insert_knot">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="offset" />
          <parameter type="const-ClutterKnot*" name="knot" />
        </parameters>
      </method>
      <constructor cname="clutter_behaviour_path_new">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="const-ClutterKnot*" name="knots" />
          <parameter type="guint" name="n_knots" />
        </parameters>
      </constructor>
      <method name="RemoveKnot" cname="clutter_behaviour_path_remove_knot">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="offset" />
        </parameters>
      </method>
    </object>
    <object name="BehaviourRotate" cname="ClutterBehaviourRotate" parent="ClutterBehaviour">
      <field name="Priv" cname="priv" type="ClutterBehaviourRotatePrivate*" />
      <property name="AngleStart" cname="angle-start" type="gdouble" readable="true" writeable="true" />
      <property name="AngleEnd" cname="angle-end" type="gdouble" readable="true" writeable="true" />
      <property name="Axis" cname="axis" type="ClutterRotateAxis" readable="true" writeable="true" />
      <property name="Direction" cname="direction" type="ClutterRotateDirection" readable="true" writeable="true" />
      <property name="CenterX" cname="center-x" type="gint" readable="true" writeable="true" />
      <property name="CenterY" cname="center-y" type="gint" readable="true" writeable="true" />
      <property name="CenterZ" cname="center-z" type="gint" readable="true" writeable="true" />
      <method name="GetAxis" cname="clutter_behaviour_rotate_get_axis">
        <return-type type="ClutterRotateAxis" />
      </method>
      <method name="GetBounds" cname="clutter_behaviour_rotate_get_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="angle_start" />
          <parameter type="gdouble*" name="angle_end" />
        </parameters>
      </method>
      <method name="GetBoundsx" cname="clutter_behaviour_rotate_get_boundsx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed*" name="angle_start" />
          <parameter type="ClutterFixed*" name="angle_end" />
        </parameters>
      </method>
      <method name="GetCenter" cname="clutter_behaviour_rotate_get_center">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="z" />
        </parameters>
      </method>
      <method name="GetDirection" cname="clutter_behaviour_rotate_get_direction">
        <return-type type="ClutterRotateDirection" />
      </method>
      <method name="GetType" cname="clutter_behaviour_rotate_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_behaviour_rotate_new">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="ClutterRotateDirection" name="direction" />
          <parameter type="gdouble" name="angle_start" />
          <parameter type="gdouble" name="angle_end" />
        </parameters>
      </constructor>
      <constructor cname="clutter_behaviour_rotate_newx">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="ClutterRotateDirection" name="direction" />
          <parameter type="ClutterFixed" name="angle_start" />
          <parameter type="ClutterFixed" name="angle_end" />
        </parameters>
      </constructor>
      <method name="SetAxis" cname="clutter_behaviour_rotate_set_axis">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterRotateAxis" name="axis" />
        </parameters>
      </method>
      <method name="SetBounds" cname="clutter_behaviour_rotate_set_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="angle_start" />
          <parameter type="gdouble" name="angle_end" />
        </parameters>
      </method>
      <method name="SetBoundsx" cname="clutter_behaviour_rotate_set_boundsx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed" name="angle_start" />
          <parameter type="ClutterFixed" name="angle_end" />
        </parameters>
      </method>
      <method name="SetCenter" cname="clutter_behaviour_rotate_set_center">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="z" />
        </parameters>
      </method>
      <method name="SetDirection" cname="clutter_behaviour_rotate_set_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterRotateDirection" name="direction" />
        </parameters>
      </method>
    </object>
    <object name="BehaviourScale" cname="ClutterBehaviourScale" parent="ClutterBehaviour">
      <field name="Priv" cname="priv" type="ClutterBehaviourScalePrivate*" />
      <property name="XScaleStart" cname="x-scale-start" type="gdouble" readable="true" writeable="true" />
      <property name="XScaleEnd" cname="x-scale-end" type="gdouble" readable="true" writeable="true" />
      <property name="YScaleStart" cname="y-scale-start" type="gdouble" readable="true" writeable="true" />
      <property name="YScaleEnd" cname="y-scale-end" type="gdouble" readable="true" writeable="true" />
      <method name="GetBounds" cname="clutter_behaviour_scale_get_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="x_scale_start" />
          <parameter type="gdouble*" name="y_scale_start" />
          <parameter type="gdouble*" name="x_scale_end" />
          <parameter type="gdouble*" name="y_scale_end" />
        </parameters>
      </method>
      <method name="GetBoundsx" cname="clutter_behaviour_scale_get_boundsx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed*" name="x_scale_start" />
          <parameter type="ClutterFixed*" name="y_scale_start" />
          <parameter type="ClutterFixed*" name="x_scale_end" />
          <parameter type="ClutterFixed*" name="y_scale_end" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_behaviour_scale_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_behaviour_scale_new">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gdouble" name="x_scale_start" />
          <parameter type="gdouble" name="y_scale_start" />
          <parameter type="gdouble" name="x_scale_end" />
          <parameter type="gdouble" name="y_scale_end" />
        </parameters>
      </constructor>
      <constructor cname="clutter_behaviour_scale_newx">
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="ClutterFixed" name="x_scale_start" />
          <parameter type="ClutterFixed" name="y_scale_start" />
          <parameter type="ClutterFixed" name="x_scale_end" />
          <parameter type="ClutterFixed" name="y_scale_end" />
        </parameters>
      </constructor>
      <method name="SetBounds" cname="clutter_behaviour_scale_set_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="x_scale_start" />
          <parameter type="gdouble" name="y_scale_start" />
          <parameter type="gdouble" name="x_scale_end" />
          <parameter type="gdouble" name="y_scale_end" />
        </parameters>
      </method>
      <method name="SetBoundsx" cname="clutter_behaviour_scale_set_boundsx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed" name="x_scale_start" />
          <parameter type="ClutterFixed" name="y_scale_start" />
          <parameter type="ClutterFixed" name="x_scale_end" />
          <parameter type="ClutterFixed" name="y_scale_end" />
        </parameters>
      </method>
    </object>
    <object name="ChildMeta" cname="ClutterChildMeta" parent="GObject">
      <field name="Container" cname="container" type="ClutterContainer*" access="public" />
      <field name="Actor" cname="actor" type="ClutterActor*" access="public" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <method name="GetActor" cname="clutter_child_meta_get_actor">
        <return-type type="ClutterActor*" />
      </method>
      <method name="GetContainer" cname="clutter_child_meta_get_container">
        <return-type type="ClutterContainer*" />
      </method>
      <method name="GetType" cname="clutter_child_meta_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CloneTexture" cname="ClutterCloneTexture" parent="ClutterActor">
      <field name="Priv" cname="priv" type="ClutterCloneTexturePrivate*" />
      <property name="ParentTexture" cname="parent-texture" type="ClutterTexture" readable="true" writeable="true" />
      <property name="RepeatX" cname="repeat-x" type="gboolean" readable="true" writeable="true" />
      <property name="RepeatY" cname="repeat-y" type="gboolean" readable="true" writeable="true" />
      <virtual_method name="ClutterClone1" cname="_clutter_clone_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterClone2" cname="_clutter_clone_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterClone3" cname="_clutter_clone_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterClone4" cname="_clutter_clone_4">
        <return-type type="void" />
      </virtual_method>
      <method name="GetParentTexture" cname="clutter_clone_texture_get_parent_texture">
        <return-type type="ClutterTexture*" />
      </method>
      <method name="GetType" cname="clutter_clone_texture_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_clone_texture_new">
        <parameters>
          <parameter type="ClutterTexture*" name="texture" />
        </parameters>
      </constructor>
      <method name="SetParentTexture" cname="clutter_clone_texture_set_parent_texture">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTexture*" name="texture" />
        </parameters>
      </method>
    </object>
    <object name="EffectTemplate" cname="ClutterEffectTemplate" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterEffectTemplatePrivate*" />
      <property name="Timeline" cname="timeline" type="ClutterTimeline" readable="true" writeable="true" construct-only="true" />
      <property name="Clone" cname="clone" type="gboolean" readable="true" writeable="true" />
      <method name="Construct" cname="clutter_effect_template_construct">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
          <parameter type="ClutterAlphaFunc" name="alpha_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="GetTimelineClone" cname="clutter_effect_template_get_timeline_clone">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="clutter_effect_template_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_effect_template_new">
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
          <parameter type="ClutterAlphaFunc" name="alpha_func" />
        </parameters>
      </constructor>
      <constructor cname="clutter_effect_template_new_for_duration">
        <parameters>
          <parameter type="guint" name="msecs" />
          <parameter type="ClutterAlphaFunc" name="alpha_func" />
        </parameters>
      </constructor>
      <constructor cname="clutter_effect_template_new_full">
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
          <parameter type="ClutterAlphaFunc" name="alpha_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </constructor>
      <method name="SetTimelineClone" cname="clutter_effect_template_set_timeline_clone">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="Entry" cname="ClutterEntry" parent="ClutterActor">
      <field name="Priv" cname="priv" type="ClutterEntryPrivate*" />
      <property name="FontName" cname="font-name" type="gchar*" readable="true" writeable="true" />
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" />
      <property name="Color" cname="color" type="ClutterColor" readable="true" writeable="true" />
      <property name="Alignment" cname="alignment" type="PangoAlignment" readable="true" writeable="true" />
      <property name="Position" cname="position" type="gint" readable="true" writeable="true" />
      <property name="CursorVisible" cname="cursor-visible" type="gboolean" readable="true" writeable="true" />
      <property name="TextVisible" cname="text-visible" type="gboolean" readable="true" writeable="true" />
      <property name="MaxLength" cname="max-length" type="gint" readable="true" writeable="true" />
      <property name="EntryPadding" cname="entry-padding" type="guint" readable="true" writeable="true" />
      <property name="XAlign" cname="x-align" type="gdouble" readable="true" writeable="true" />
      <signal name="TextChanged" cname="text-changed" when="LAST" field_name="text_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterEntry*" name="entry" />
        </parameters>
      </signal>
      <signal name="CursorEvent" cname="cursor-event" when="LAST" field_name="cursor_event">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterEntry*" name="entry" />
          <parameter type="ClutterGeometry*" name="geometry" />
        </parameters>
      </signal>
      <signal name="Activate" cname="activate" when="LAST" field_name="activate">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterEntry*" name="entry" />
        </parameters>
      </signal>
      <virtual_method name="PaintCursor" cname="paint_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterEntry*" name="entry" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClutterEntry1" cname="_clutter_entry_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterEntry2" cname="_clutter_entry_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterEntry3" cname="_clutter_entry_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterEntry4" cname="_clutter_entry_4">
        <return-type type="void" />
      </virtual_method>
      <method name="DeleteChars" cname="clutter_entry_delete_chars">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="len" />
        </parameters>
      </method>
      <method name="DeleteText" cname="clutter_entry_delete_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gssize" name="start_pos" />
          <parameter type="gssize" name="end_pos" />
        </parameters>
      </method>
      <method name="GetAlignment" cname="clutter_entry_get_alignment">
        <return-type type="PangoAlignment" />
      </method>
      <method name="GetColor" cname="clutter_entry_get_color">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="GetCursorPosition" cname="clutter_entry_get_cursor_position">
        <return-type type="gint" />
      </method>
      <method name="GetFontName" cname="clutter_entry_get_font_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetInvisibleChar" cname="clutter_entry_get_invisible_char">
        <return-type type="gunichar" />
      </method>
      <method name="GetLayout" cname="clutter_entry_get_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetMaxLength" cname="clutter_entry_get_max_length">
        <return-type type="gint" />
      </method>
      <method name="GetText" cname="clutter_entry_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="clutter_entry_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibility" cname="clutter_entry_get_visibility">
        <return-type type="gboolean" />
      </method>
      <method name="GetVisibleCursor" cname="clutter_entry_get_visible_cursor">
        <return-type type="gboolean" />
      </method>
      <method name="HandleKeyEvent" cname="clutter_entry_handle_key_event" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterKeyEvent*" name="kev" />
        </parameters>
      </method>
      <method name="InsertText" cname="clutter_entry_insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gssize" name="position" />
        </parameters>
      </method>
      <method name="InsertUnichar" cname="clutter_entry_insert_unichar">
        <return-type type="void" />
        <parameters>
          <parameter type="gunichar" name="wc" />
        </parameters>
      </method>
      <constructor cname="clutter_entry_new" />
      <constructor cname="clutter_entry_new_full">
        <parameters>
          <parameter type="const-gchar*" name="font_name" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </constructor>
      <constructor cname="clutter_entry_new_with_text">
        <parameters>
          <parameter type="const-gchar*" name="font_name" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </constructor>
      <method name="SetAlignment" cname="clutter_entry_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAlignment" name="alignment" />
        </parameters>
      </method>
      <method name="SetColor" cname="clutter_entry_set_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="SetCursorPosition" cname="clutter_entry_set_cursor_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetFontName" cname="clutter_entry_set_font_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="font_name" />
        </parameters>
      </method>
      <method name="SetInvisibleChar" cname="clutter_entry_set_invisible_char">
        <return-type type="void" />
        <parameters>
          <parameter type="gunichar" name="wc" />
        </parameters>
      </method>
      <method name="SetMaxLength" cname="clutter_entry_set_max_length">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="max" />
        </parameters>
      </method>
      <method name="SetText" cname="clutter_entry_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetVisibility" cname="clutter_entry_set_visibility">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
      <method name="SetVisibleCursor" cname="clutter_entry_set_visible_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
    </object>
    <object name="Group" cname="ClutterGroup" parent="ClutterActor">
      <field name="Priv" cname="priv" type="ClutterGroupPrivate*" />
      <signal name="Add" cname="add" when="FIRST" field_name="add">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterGroup*" name="group" />
          <parameter type="ClutterActor*" name="child" />
        </parameters>
      </signal>
      <signal name="Remove" cname="remove" when="FIRST" field_name="remove">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterGroup*" name="group" />
          <parameter type="ClutterActor*" name="child" />
        </parameters>
      </signal>
      <implements>
        <interface cname="ClutterContainer" />
      </implements>
      <method name="AddMany" cname="clutter_group_add_many" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="first_actor" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="AddManyValist" cname="clutter_group_add_many_valist" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="first_actor" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="GetNChildren" cname="clutter_group_get_n_children">
        <return-type type="gint" />
      </method>
      <method name="GetNthChild" cname="clutter_group_get_nth_child">
        <return-type type="ClutterActor*" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lower" cname="clutter_group_lower" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterActor*" name="sibling" />
        </parameters>
      </method>
      <constructor cname="clutter_group_new" />
      <method name="Raise" cname="clutter_group_raise" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterActor*" name="sibling" />
        </parameters>
      </method>
      <method name="Remove" cname="clutter_group_remove" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="RemoveAll" cname="clutter_group_remove_all">
        <return-type type="void" />
      </method>
      <method name="SortDepthOrder" cname="clutter_group_sort_depth_order" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="Label" cname="ClutterLabel" parent="ClutterActor">
      <field name="Priv" cname="priv" type="ClutterLabelPrivate*" />
      <property name="FontName" cname="font-name" type="gchar*" readable="true" writeable="true" />
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" />
      <property name="Color" cname="color" type="ClutterColor" readable="true" writeable="true" />
      <property name="Attributes" cname="attributes" type="PangoAttrList" readable="true" writeable="true" />
      <property name="UseMarkup" cname="use-markup" type="gboolean" readable="true" writeable="true" />
      <property name="Wrap" cname="wrap" type="gboolean" readable="true" writeable="true" />
      <property name="WrapMode" cname="wrap-mode" type="PangoWrapMode" readable="true" writeable="true" />
      <property name="Ellipsize" cname="ellipsize" type="PangoEllipsizeMode" readable="true" writeable="true" />
      <property name="Alignment" cname="alignment" type="PangoAlignment" readable="true" writeable="true" />
      <property name="Justify" cname="justify" type="gboolean" readable="true" writeable="true" />
      <virtual_method name="ClutterLabel1" cname="_clutter_label_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterLabel2" cname="_clutter_label_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterLabel3" cname="_clutter_label_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterLabel4" cname="_clutter_label_4">
        <return-type type="void" />
      </virtual_method>
      <method name="GetAlignment" cname="clutter_label_get_alignment">
        <return-type type="PangoAlignment" />
      </method>
      <method name="GetAttributes" cname="clutter_label_get_attributes">
        <return-type type="PangoAttrList*" />
      </method>
      <method name="GetColor" cname="clutter_label_get_color">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="GetEllipsize" cname="clutter_label_get_ellipsize">
        <return-type type="PangoEllipsizeMode" />
      </method>
      <method name="GetFontName" cname="clutter_label_get_font_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetJustify" cname="clutter_label_get_justify">
        <return-type type="gboolean" />
      </method>
      <method name="GetLayout" cname="clutter_label_get_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetLineWrap" cname="clutter_label_get_line_wrap">
        <return-type type="gboolean" />
      </method>
      <method name="GetLineWrapMode" cname="clutter_label_get_line_wrap_mode">
        <return-type type="PangoWrapMode" />
      </method>
      <method name="GetText" cname="clutter_label_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="clutter_label_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseMarkup" cname="clutter_label_get_use_markup">
        <return-type type="gboolean" />
      </method>
      <constructor cname="clutter_label_new" />
      <constructor cname="clutter_label_new_full">
        <parameters>
          <parameter type="const-gchar*" name="font_name" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </constructor>
      <constructor cname="clutter_label_new_with_text">
        <parameters>
          <parameter type="const-gchar*" name="font_name" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </constructor>
      <method name="SetAlignment" cname="clutter_label_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAlignment" name="alignment" />
        </parameters>
      </method>
      <method name="SetAttributes" cname="clutter_label_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttrList*" name="attrs" />
        </parameters>
      </method>
      <method name="SetColor" cname="clutter_label_set_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="SetEllipsize" cname="clutter_label_set_ellipsize">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoEllipsizeMode" name="mode" />
        </parameters>
      </method>
      <method name="SetFontName" cname="clutter_label_set_font_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="font_name" />
        </parameters>
      </method>
      <method name="SetJustify" cname="clutter_label_set_justify">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="justify" />
        </parameters>
      </method>
      <method name="SetLineWrap" cname="clutter_label_set_line_wrap">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="wrap" />
        </parameters>
      </method>
      <method name="SetLineWrapMode" cname="clutter_label_set_line_wrap_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoWrapMode" name="wrap_mode" />
        </parameters>
      </method>
      <method name="SetText" cname="clutter_label_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetUseMarkup" cname="clutter_label_set_use_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="ListModel" cname="ClutterListModel" parent="ClutterModel">
      <method name="GetType" cname="clutter_list_model_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_list_model_new">
        <parameters>
          <parameter type="guint" name="n_columns" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="clutter_list_model_newv">
        <parameters>
          <parameter type="guint" name="n_columns" />
          <parameter type="GType*" name="types" />
          <parameter type="const-gchar*" array="true" name="names" />
        </parameters>
      </constructor>
    </object>
    <object name="Model" cname="ClutterModel" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterModelPrivate*" />
      <signal name="RowAdded" cname="row-added" when="LAST" field_name="row_added">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </signal>
      <signal name="RowRemoved" cname="row-removed" when="LAST" field_name="row_removed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </signal>
      <signal name="RowChanged" cname="row-changed" when="LAST" field_name="row_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </signal>
      <signal name="SortChanged" cname="sort-changed" when="LAST" field_name="sort_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
        </parameters>
      </signal>
      <signal name="FilterChanged" cname="filter-changed" when="LAST" field_name="filter_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
        </parameters>
      </signal>
      <virtual_method name="GetNRows" cname="get_n_rows">
        <return-type type="guint" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNColumns" cname="get_n_columns">
        <return-type type="guint" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetColumnType" cname="get_column_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
          <parameter type="guint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="InsertRow" cname="insert_row">
        <return-type type="ClutterModelIter*" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
          <parameter type="gint" name="index_" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveRow" cname="remove_row">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
          <parameter type="guint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetIterAtRow" cname="get_iter_at_row">
        <return-type type="ClutterModelIter*" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
          <parameter type="guint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="Resort" cname="resort">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModel*" name="model" />
          <parameter type="ClutterModelSortFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClutterModel1" cname="_clutter_model_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterModel2" cname="_clutter_model_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterModel3" cname="_clutter_model_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterModel4" cname="_clutter_model_4">
        <return-type type="void" />
      </virtual_method>
      <method name="Append" cname="clutter_model_append">
        <return-type type="void" />
        <parameters>
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="Appendv" cname="clutter_model_appendv">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_columns" />
          <parameter type="guint*" name="columns" />
          <parameter type="GValue*" name="values" />
        </parameters>
      </method>
      <method name="FilterIter" cname="clutter_model_filter_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </method>
      <method name="FilterRow" cname="clutter_model_filter_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="row" />
        </parameters>
      </method>
      <method name="Foreach" cname="clutter_model_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModelForeachFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="GetColumnName" cname="clutter_model_get_column_name">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="guint" name="column" />
        </parameters>
      </method>
      <method name="GetColumnType" cname="clutter_model_get_column_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="guint" name="column" />
        </parameters>
      </method>
      <method name="GetFirstIter" cname="clutter_model_get_first_iter">
        <return-type type="ClutterModelIter*" />
      </method>
      <method name="GetIterAtRow" cname="clutter_model_get_iter_at_row">
        <return-type type="ClutterModelIter*" />
        <parameters>
          <parameter type="guint" name="row" />
        </parameters>
      </method>
      <method name="GetLastIter" cname="clutter_model_get_last_iter">
        <return-type type="ClutterModelIter*" />
      </method>
      <method name="GetNColumns" cname="clutter_model_get_n_columns">
        <return-type type="guint" />
      </method>
      <method name="GetNRows" cname="clutter_model_get_n_rows">
        <return-type type="guint" />
      </method>
      <method name="GetSortingColumn" cname="clutter_model_get_sorting_column">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="clutter_model_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="clutter_model_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="row" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="InsertValue" cname="clutter_model_insert_value">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="row" />
          <parameter type="guint" name="column" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="Insertv" cname="clutter_model_insertv">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="row" />
          <parameter type="guint" name="n_columns" />
          <parameter type="guint*" name="columns" />
          <parameter type="GValue*" name="values" />
        </parameters>
      </method>
      <method name="Prepend" cname="clutter_model_prepend">
        <return-type type="void" />
        <parameters>
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="Prependv" cname="clutter_model_prependv">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_columns" />
          <parameter type="guint*" name="columns" />
          <parameter type="GValue*" name="values" />
        </parameters>
      </method>
      <method name="Remove" cname="clutter_model_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="row" />
        </parameters>
      </method>
      <method name="Resort" cname="clutter_model_resort">
        <return-type type="void" />
      </method>
      <method name="SetFilter" cname="clutter_model_set_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModelFilterFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="SetNames" cname="clutter_model_set_names">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_columns" />
          <parameter type="const-gchar*" array="true" name="names" />
        </parameters>
      </method>
      <method name="SetSort" cname="clutter_model_set_sort">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="column" />
          <parameter type="ClutterModelSortFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="SetSortingColumn" cname="clutter_model_set_sorting_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetTypes" cname="clutter_model_set_types">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </method>
    </object>
    <object name="ModelIter" cname="ClutterModelIter" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterModelIterPrivate*" />
      <property name="Model" cname="model" type="ClutterModel" readable="true" writeable="true" />
      <property name="Row" cname="row" type="guint" readable="true" writeable="true" />
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
          <parameter type="guint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetValue" cname="set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
          <parameter type="guint" name="column" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsFirst" cname="is_first">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsLast" cname="is_last">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="Next" cname="next">
        <return-type type="ClutterModelIter*" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="Prev" cname="prev">
        <return-type type="ClutterModelIter*" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetModel" cname="get_model">
        <return-type type="ClutterModel*" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRow" cname="get_row">
        <return-type type="guint" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="Copy" cname="copy">
        <return-type type="ClutterModelIter*" owned="true" />
        <parameters>
          <parameter type="ClutterModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClutterModelIter1" cname="_clutter_model_iter_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterModelIter2" cname="_clutter_model_iter_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterModelIter3" cname="_clutter_model_iter_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterModelIter4" cname="_clutter_model_iter_4">
        <return-type type="void" />
      </virtual_method>
      <method name="Copy" cname="clutter_model_iter_copy">
        <return-type type="ClutterModelIter*" owned="true" />
      </method>
      <method name="Get" cname="clutter_model_iter_get">
        <return-type type="void" />
        <parameters>
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetModel" cname="clutter_model_iter_get_model">
        <return-type type="ClutterModel*" />
      </method>
      <method name="GetRow" cname="clutter_model_iter_get_row">
        <return-type type="guint" />
      </method>
      <method name="GetType" cname="clutter_model_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValist" cname="clutter_model_iter_get_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="va_list" name="args" />
        </parameters>
      </method>
      <method name="GetValue" cname="clutter_model_iter_get_value">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="IsFirst" cname="clutter_model_iter_is_first">
        <return-type type="gboolean" />
      </method>
      <method name="IsLast" cname="clutter_model_iter_is_last">
        <return-type type="gboolean" />
      </method>
      <method name="Next" cname="clutter_model_iter_next">
        <return-type type="ClutterModelIter*" />
      </method>
      <method name="Prev" cname="clutter_model_iter_prev">
        <return-type type="ClutterModelIter*" />
      </method>
      <method name="Set" cname="clutter_model_iter_set">
        <return-type type="void" />
        <parameters>
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetValist" cname="clutter_model_iter_set_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="va_list" name="args" />
        </parameters>
      </method>
      <method name="SetValue" cname="clutter_model_iter_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="column" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
    </object>
    <object name="ParamSpecColor" cname="ClutterParamSpecColor" parent="GParamSpec">
      <field name="DefaultValue" cname="default_value" type="ClutterColor*" access="public" />
    </object>
    <object name="ParamSpecFixed" cname="ClutterParamSpecFixed" parent="GParamSpec">
      <field name="Minimum" cname="minimum" type="ClutterFixed" access="public" />
      <field name="Maximum" cname="maximum" type="ClutterFixed" access="public" />
      <field name="DefaultValue" cname="default_value" type="ClutterFixed" access="public" />
    </object>
    <object name="ParamSpecUnit" cname="ClutterParamSpecUnit" parent="GParamSpec">
      <field name="Minimum" cname="minimum" type="ClutterUnit" access="public" />
      <field name="Maximum" cname="maximum" type="ClutterUnit" access="public" />
      <field name="DefaultValue" cname="default_value" type="ClutterUnit" access="public" />
    </object>
    <object name="Rectangle" cname="ClutterRectangle" parent="ClutterActor">
      <field name="Priv" cname="priv" type="ClutterRectanglePrivate*" />
      <property name="Color" cname="color" type="ClutterColor" readable="true" writeable="true" />
      <property name="BorderColor" cname="border-color" type="ClutterColor" readable="true" writeable="true" />
      <property name="BorderWidth" cname="border-width" type="guint" readable="true" writeable="true" />
      <property name="HasBorder" cname="has-border" type="gboolean" readable="true" writeable="true" />
      <virtual_method name="ClutterRectangle1" cname="_clutter_rectangle1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterRectangle2" cname="_clutter_rectangle2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterRectangle3" cname="_clutter_rectangle3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterRectangle4" cname="_clutter_rectangle4">
        <return-type type="void" />
      </virtual_method>
      <method name="GetBorderColor" cname="clutter_rectangle_get_border_color">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="GetBorderWidth" cname="clutter_rectangle_get_border_width">
        <return-type type="guint" />
      </method>
      <method name="GetColor" cname="clutter_rectangle_get_color">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_rectangle_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_rectangle_new" />
      <constructor cname="clutter_rectangle_new_with_color">
        <parameters>
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </constructor>
      <method name="SetBorderColor" cname="clutter_rectangle_set_border_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="SetBorderWidth" cname="clutter_rectangle_set_border_width">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="width" />
        </parameters>
      </method>
      <method name="SetColor" cname="clutter_rectangle_set_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </method>
    </object>
    <object name="Score" cname="ClutterScore" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterScorePrivate*" />
      <property name="Loop" cname="loop" type="gboolean" readable="true" writeable="true" />
      <signal name="TimelineStarted" cname="timeline-started" when="LAST" field_name="timeline_started">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScore*" name="score" />
          <parameter type="ClutterTimeline*" name="timeline" />
        </parameters>
      </signal>
      <signal name="TimelineCompleted" cname="timeline-completed" when="LAST" field_name="timeline_completed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScore*" name="score" />
          <parameter type="ClutterTimeline*" name="timeline" />
        </parameters>
      </signal>
      <signal name="Completed" cname="completed" when="LAST" field_name="completed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScore*" name="score" />
        </parameters>
      </signal>
      <signal name="Started" cname="started" when="LAST" field_name="started">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScore*" name="score" />
        </parameters>
      </signal>
      <signal name="Paused" cname="paused" when="LAST" field_name="paused">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScore*" name="score" />
        </parameters>
      </signal>
      <virtual_method name="ClutterScore1" cname="_clutter_score_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterScore2" cname="_clutter_score_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterScore3" cname="_clutter_score_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterScore4" cname="_clutter_score_4">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterScore5" cname="_clutter_score_5">
        <return-type type="void" />
      </virtual_method>
      <method name="Append" cname="clutter_score_append">
        <return-type type="gulong" />
        <parameters>
          <parameter type="ClutterTimeline*" name="parent" />
          <parameter type="ClutterTimeline*" name="timeline" />
        </parameters>
      </method>
      <method name="AppendAtMarker" cname="clutter_score_append_at_marker">
        <return-type type="gulong" />
        <parameters>
          <parameter type="ClutterTimeline*" name="parent" />
          <parameter type="const-gchar*" name="marker_name" />
          <parameter type="ClutterTimeline*" name="timeline" />
        </parameters>
      </method>
      <method name="GetLoop" cname="clutter_score_get_loop">
        <return-type type="gboolean" />
      </method>
      <method name="GetTimeline" cname="clutter_score_get_timeline">
        <return-type type="ClutterTimeline*" />
        <parameters>
          <parameter type="gulong" name="id" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_score_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsPlaying" cname="clutter_score_is_playing">
        <return-type type="gboolean" />
      </method>
      <method name="ListTimelines" cname="clutter_score_list_timelines">
        <return-type type="GSList*" />
      </method>
      <constructor cname="clutter_score_new" />
      <method name="Pause" cname="clutter_score_pause">
        <return-type type="void" />
      </method>
      <method name="Remove" cname="clutter_score_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="gulong" name="id" />
        </parameters>
      </method>
      <method name="RemoveAll" cname="clutter_score_remove_all">
        <return-type type="void" />
      </method>
      <method name="Rewind" cname="clutter_score_rewind">
        <return-type type="void" />
      </method>
      <method name="SetLoop" cname="clutter_score_set_loop">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="loop" />
        </parameters>
      </method>
      <method name="Start" cname="clutter_score_start">
        <return-type type="void" />
      </method>
      <method name="Stop" cname="clutter_score_stop">
        <return-type type="void" />
      </method>
    </object>
    <object name="Script" cname="ClutterScript" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterScriptPrivate*" />
      <property name="FilenameSet" cname="filename-set" type="gboolean" readable="true" />
      <property name="Filename" cname="filename" type="gchar*" readable="true" />
      <virtual_method name="GetTypeFromName" cname="get_type_from_name">
        <return-type type="GType" />
        <parameters>
          <parameter type="ClutterScript*" name="script" />
          <parameter type="const-gchar*" name="type_name" />
        </parameters>
      </virtual_method>
      <method name="AddSearchPaths" cname="clutter_script_add_search_paths">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" array="true" name="paths" />
          <parameter type="gsize" name="n_paths" />
        </parameters>
      </method>
      <method name="ConnectSignals" cname="clutter_script_connect_signals">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="ConnectSignalsFull" cname="clutter_script_connect_signals_full">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterScriptConnectFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="EnsureObjects" cname="clutter_script_ensure_objects">
        <return-type type="void" />
      </method>
      <method name="ErrorQuark" cname="clutter_script_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetObject" cname="clutter_script_get_object">
        <return-type type="GObject*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetObjects" cname="clutter_script_get_objects">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-gchar*" name="first_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_script_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetTypeFromName" cname="clutter_script_get_type_from_name">
        <return-type type="GType" />
        <parameters>
          <parameter type="const-gchar*" name="type_name" />
        </parameters>
      </method>
      <method name="ListObjects" cname="clutter_script_list_objects">
        <return-type type="GList*" />
      </method>
      <method name="LoadFromData" cname="clutter_script_load_from_data">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="data" />
          <parameter type="gssize" name="length" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="LoadFromFile" cname="clutter_script_load_from_file">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="LookupFilename" cname="clutter_script_lookup_filename">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <constructor cname="clutter_script_new" />
      <method name="UnmergeObjects" cname="clutter_script_unmerge_objects">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="merge_id" />
        </parameters>
      </method>
    </object>
    <object name="Shader" cname="ClutterShader" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterShaderPrivate*" />
      <property name="VertexSource" cname="vertex-source" type="gchar*" readable="true" writeable="true" />
      <property name="FragmentSource" cname="fragment-source" type="gchar*" readable="true" writeable="true" />
      <property name="Compiled" cname="compiled" type="gboolean" readable="true" />
      <property name="Enabled" cname="enabled" type="gboolean" readable="true" writeable="true" />
      <method name="Compile" cname="clutter_shader_compile">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="clutter_shader_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetFragmentSource" cname="clutter_shader_get_fragment_source">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetIsEnabled" cname="clutter_shader_get_is_enabled">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="clutter_shader_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVertexSource" cname="clutter_shader_get_vertex_source">
        <return-type type="const-gchar*" />
      </method>
      <method name="IsCompiled" cname="clutter_shader_is_compiled">
        <return-type type="gboolean" />
      </method>
      <constructor cname="clutter_shader_new" />
      <method name="Release" cname="clutter_shader_release">
        <return-type type="void" />
      </method>
      <method name="SetFragmentSource" cname="clutter_shader_set_fragment_source">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="data" />
          <parameter type="gssize" name="length" />
        </parameters>
      </method>
      <method name="SetIsEnabled" cname="clutter_shader_set_is_enabled">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enabled" />
        </parameters>
      </method>
      <method name="SetUniform1f" cname="clutter_shader_set_uniform_1f">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="gfloat" name="value" />
        </parameters>
      </method>
      <method name="SetVertexSource" cname="clutter_shader_set_vertex_source">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="data" />
          <parameter type="gssize" name="length" />
        </parameters>
      </method>
    </object>
    <object name="Stage" cname="ClutterStage" parent="ClutterGroup">
      <field name="Priv" cname="priv" type="ClutterStagePrivate*" />
      <property name="Fullscreen" cname="fullscreen" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="Offscreen" cname="offscreen" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="CursorVisible" cname="cursor-visible" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="UserResizable" cname="user-resizable" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="Color" cname="color" type="ClutterColor" readable="true" writeable="true" />
      <property name="Perspective" cname="perspective" type="ClutterPerspective" readable="true" writeable="true" />
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" />
      <property name="UseFog" cname="use-fog" type="gboolean" readable="true" writeable="true" />
      <signal name="Fullscreen" cname="fullscreen" when="FIRST" field_name="fullscreen">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </signal>
      <signal name="Unfullscreen" cname="unfullscreen" when="LAST" field_name="unfullscreen">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </signal>
      <signal name="Activate" cname="activate" when="LAST" field_name="activate">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </signal>
      <signal name="Deactivate" cname="deactivate" when="LAST" field_name="deactivate">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </signal>
      <method name="EnsureCurrent" cname="clutter_stage_ensure_current">
        <return-type type="void" />
      </method>
      <method name="Event" cname="clutter_stage_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="Fullscreen" cname="clutter_stage_fullscreen">
        <return-type type="void" />
      </method>
      <method name="GetActorAtPos" cname="clutter_stage_get_actor_at_pos">
        <return-type type="ClutterActor*" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetColor" cname="clutter_stage_get_color">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="GetDefault" cname="clutter_stage_get_default" shared="true">
        <return-type type="ClutterActor*" />
      </method>
      <method name="GetFog" cname="clutter_stage_get_fog">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="density" />
          <parameter type="gdouble*" name="z_near" />
          <parameter type="gdouble*" name="z_far" />
        </parameters>
      </method>
      <method name="GetFogx" cname="clutter_stage_get_fogx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFog*" name="fog" />
        </parameters>
      </method>
      <method name="GetKeyFocus" cname="clutter_stage_get_key_focus">
        <return-type type="ClutterActor*" />
      </method>
      <method name="GetPerspective" cname="clutter_stage_get_perspective">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat*" name="fovy" />
          <parameter type="gfloat*" name="aspect" />
          <parameter type="gfloat*" name="z_near" />
          <parameter type="gfloat*" name="z_far" />
        </parameters>
      </method>
      <method name="GetPerspectivex" cname="clutter_stage_get_perspectivex">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterPerspective*" name="perspective" />
        </parameters>
      </method>
      <method name="GetResolution" cname="clutter_stage_get_resolution">
        <return-type type="gdouble" />
      </method>
      <method name="GetResolutionx" cname="clutter_stage_get_resolutionx">
        <return-type type="ClutterFixed" />
      </method>
      <method name="GetTitle" cname="clutter_stage_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="clutter_stage_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseFog" cname="clutter_stage_get_use_fog">
        <return-type type="gboolean" />
      </method>
      <method name="GetUserResizable" cname="clutter_stage_get_user_resizable">
        <return-type type="gboolean" />
      </method>
      <method name="HideCursor" cname="clutter_stage_hide_cursor">
        <return-type type="void" />
      </method>
      <method name="IsDefault" cname="clutter_stage_is_default">
        <return-type type="gboolean" />
      </method>
      <constructor cname="clutter_stage_new" />
      <method name="QueueRedraw" cname="clutter_stage_queue_redraw">
        <return-type type="void" />
      </method>
      <method name="ReadPixels" cname="clutter_stage_read_pixels">
        <return-type type="guchar*" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetColor" cname="clutter_stage_set_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="SetFog" cname="clutter_stage_set_fog">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="density" />
          <parameter type="gdouble" name="z_near" />
          <parameter type="gdouble" name="z_far" />
        </parameters>
      </method>
      <method name="SetFogx" cname="clutter_stage_set_fogx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFog*" name="fog" />
        </parameters>
      </method>
      <method name="SetKeyFocus" cname="clutter_stage_set_key_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="SetPerspective" cname="clutter_stage_set_perspective">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="fovy" />
          <parameter type="gfloat" name="aspect" />
          <parameter type="gfloat" name="z_near" />
          <parameter type="gfloat" name="z_far" />
        </parameters>
      </method>
      <method name="SetPerspectivex" cname="clutter_stage_set_perspectivex">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterPerspective*" name="perspective" />
        </parameters>
      </method>
      <method name="SetTitle" cname="clutter_stage_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetUseFog" cname="clutter_stage_set_use_fog">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="fog" />
        </parameters>
      </method>
      <method name="SetUserResizable" cname="clutter_stage_set_user_resizable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="resizable" />
        </parameters>
      </method>
      <method name="ShowCursor" cname="clutter_stage_show_cursor">
        <return-type type="void" />
      </method>
      <method name="Unfullscreen" cname="clutter_stage_unfullscreen">
        <return-type type="void" />
      </method>
    </object>
    <object name="StageManager" cname="ClutterStageManager" parent="GObject">
      <property name="DefaultStage" cname="default-stage" type="ClutterStage" readable="true" writeable="true" />
      <signal name="StageAdded" cname="stage-added" when="LAST" field_name="stage_added">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStageManager*" name="stage_manager" />
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </signal>
      <signal name="StageRemoved" cname="stage-removed" when="LAST" field_name="stage_removed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStageManager*" name="stage_manager" />
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </signal>
      <method name="GetDefault" cname="clutter_stage_manager_get_default" shared="true">
        <return-type type="ClutterStageManager*" />
      </method>
      <method name="GetDefaultStage" cname="clutter_stage_manager_get_default_stage">
        <return-type type="ClutterStage*" />
      </method>
      <method name="GetType" cname="clutter_stage_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListStages" cname="clutter_stage_manager_list_stages">
        <return-type type="GSList*" />
      </method>
      <method name="SetDefaultStage" cname="clutter_stage_manager_set_default_stage">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterStage*" name="stage" />
        </parameters>
      </method>
    </object>
    <object name="Texture" cname="ClutterTexture" parent="ClutterActor">
      <field name="Priv" cname="priv" type="ClutterTexturePrivate*" />
      <property name="SyncSize" cname="sync-size" type="gboolean" readable="true" writeable="true" />
      <property name="DisableSlicing" cname="disable-slicing" type="gboolean" readable="true" writeable="true" construct-only="true" />
      <property name="RepeatX" cname="repeat-x" type="gboolean" readable="true" writeable="true" />
      <property name="RepeatY" cname="repeat-y" type="gboolean" readable="true" writeable="true" />
      <property name="FilterQuality" cname="filter-quality" type="ClutterTextureQuality" readable="true" writeable="true" construct="true" />
      <property name="TileWaste" cname="tile-waste" type="gint" readable="true" writeable="true" construct-only="true" />
      <property name="PixelFormat" cname="pixel-format" type="gint" readable="true" />
      <property name="CoglTexture" cname="cogl-texture" type="ClutterTextureHandle" readable="true" writeable="true" />
      <property name="Filename" cname="filename" type="gchar*" writeable="true" />
      <property name="KeepAspectRatio" cname="keep-aspect-ratio" type="gboolean" readable="true" writeable="true" />
      <signal name="SizeChange" cname="size-change" when="LAST" field_name="size_change">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTexture*" name="texture" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </signal>
      <signal name="PixbufChange" cname="pixbuf-change" when="LAST" field_name="pixbuf_change">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTexture*" name="texture" />
        </parameters>
      </signal>
      <virtual_method name="ClutterTexture1" cname="_clutter_texture1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTexture2" cname="_clutter_texture2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTexture3" cname="_clutter_texture3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTexture4" cname="_clutter_texture4">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTexture5" cname="_clutter_texture5">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTexture6" cname="_clutter_texture6">
        <return-type type="void" />
      </virtual_method>
      <implements>
        <interface cname="ClutterScriptable" />
      </implements>
      <method name="ErrorQuark" cname="clutter_texture_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetBaseSize" cname="clutter_texture_get_base_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetCoglTexture" cname="clutter_texture_get_cogl_texture">
        <return-type type="CoglHandle" />
      </method>
      <method name="GetFilterQuality" cname="clutter_texture_get_filter_quality">
        <return-type type="ClutterTextureQuality" />
      </method>
      <method name="GetMaxTileWaste" cname="clutter_texture_get_max_tile_waste">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="clutter_texture_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HandleGetType" cname="clutter_texture_handle_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="clutter_texture_new" />
      <constructor cname="clutter_texture_new_from_actor">
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </constructor>
      <constructor cname="clutter_texture_new_from_file">
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="SetAreaFromRgbData" cname="clutter_texture_set_area_from_rgb_data">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-guchar*" name="data" />
          <parameter type="gboolean" name="has_alpha" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint" name="rowstride" />
          <parameter type="gint" name="bpp" />
          <parameter type="ClutterTextureFlags" name="flags" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetCoglTexture" cname="clutter_texture_set_cogl_texture">
        <return-type type="void" />
        <parameters>
          <parameter type="CoglHandle" name="cogl_tex" />
        </parameters>
      </method>
      <method name="SetFilterQuality" cname="clutter_texture_set_filter_quality">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTextureQuality" name="filter_quality" />
        </parameters>
      </method>
      <method name="SetFromFile" cname="clutter_texture_set_from_file">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetFromRgbData" cname="clutter_texture_set_from_rgb_data">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-guchar*" name="data" />
          <parameter type="gboolean" name="has_alpha" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint" name="rowstride" />
          <parameter type="gint" name="bpp" />
          <parameter type="ClutterTextureFlags" name="flags" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetFromYuvData" cname="clutter_texture_set_from_yuv_data">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-guchar*" name="data" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="ClutterTextureFlags" name="flags" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetMaxTileWaste" cname="clutter_texture_set_max_tile_waste">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="max_tile_waste" />
        </parameters>
      </method>
    </object>
    <object name="Timeline" cname="ClutterTimeline" parent="GObject">
      <field name="Priv" cname="priv" type="ClutterTimelinePrivate*" />
      <property name="Fps" cname="fps" type="guint" readable="true" writeable="true" />
      <property name="NumFrames" cname="num-frames" type="guint" readable="true" writeable="true" />
      <property name="Loop" cname="loop" type="gboolean" readable="true" writeable="true" />
      <property name="Delay" cname="delay" type="guint" readable="true" writeable="true" />
      <property name="Duration" cname="duration" type="guint" readable="true" writeable="true" />
      <property name="Direction" cname="direction" type="ClutterTimelineDirection" readable="true" writeable="true" />
      <signal name="NewFrame" cname="new-frame" when="LAST" field_name="new_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
          <parameter type="gint" name="frame_num" />
        </parameters>
      </signal>
      <signal name="Completed" cname="completed" when="LAST" field_name="completed">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
        </parameters>
      </signal>
      <signal name="Started" cname="started" when="LAST" field_name="started">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
        </parameters>
      </signal>
      <signal name="Paused" cname="paused" when="LAST" field_name="paused">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
        </parameters>
      </signal>
      <signal name="MarkerReached" cname="marker-reached" when="LAST" field_name="marker_reached">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTimeline*" name="timeline" />
          <parameter type="const-gchar*" name="marker_name" />
          <parameter type="gint" name="frame_num" />
        </parameters>
      </signal>
      <virtual_method name="ClutterTimeline1" cname="_clutter_timeline_1">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTimeline2" cname="_clutter_timeline_2">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTimeline3" cname="_clutter_timeline_3">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTimeline4" cname="_clutter_timeline_4">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="ClutterTimeline5" cname="_clutter_timeline_5">
        <return-type type="void" />
      </virtual_method>
      <method name="AddMarkerAtFrame" cname="clutter_timeline_add_marker_at_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="marker_name" />
          <parameter type="guint" name="frame_num" />
        </parameters>
      </method>
      <method name="AddMarkerAtTime" cname="clutter_timeline_add_marker_at_time">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="marker_name" />
          <parameter type="guint" name="msecs" />
        </parameters>
      </method>
      <method name="Advance" cname="clutter_timeline_advance">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="frame_num" />
        </parameters>
      </method>
      <method name="AdvanceToMarker" cname="clutter_timeline_advance_to_marker">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="marker_name" />
        </parameters>
      </method>
      <method name="Clone" cname="clutter_timeline_clone">
        <return-type type="ClutterTimeline*" />
      </method>
      <method name="GetCurrentFrame" cname="clutter_timeline_get_current_frame">
        <return-type type="gint" />
      </method>
      <method name="GetDelay" cname="clutter_timeline_get_delay">
        <return-type type="guint" />
      </method>
      <method name="GetDelta" cname="clutter_timeline_get_delta">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint*" name="msecs" />
        </parameters>
      </method>
      <method name="GetDirection" cname="clutter_timeline_get_direction">
        <return-type type="ClutterTimelineDirection" />
      </method>
      <method name="GetDuration" cname="clutter_timeline_get_duration">
        <return-type type="guint" />
      </method>
      <method name="GetLoop" cname="clutter_timeline_get_loop">
        <return-type type="gboolean" />
      </method>
      <method name="GetNFrames" cname="clutter_timeline_get_n_frames">
        <return-type type="guint" />
      </method>
      <method name="GetProgress" cname="clutter_timeline_get_progress">
        <return-type type="gdouble" />
      </method>
      <method name="GetProgressx" cname="clutter_timeline_get_progressx">
        <return-type type="ClutterFixed" />
      </method>
      <method name="GetSpeed" cname="clutter_timeline_get_speed">
        <return-type type="guint" />
      </method>
      <method name="GetType" cname="clutter_timeline_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasMarker" cname="clutter_timeline_has_marker">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="marker_name" />
        </parameters>
      </method>
      <method name="IsPlaying" cname="clutter_timeline_is_playing">
        <return-type type="gboolean" />
      </method>
      <method name="ListMarkers" cname="clutter_timeline_list_markers">
        <return-type type="gchar**" />
        <parameters>
          <parameter type="gint" name="frame_num" />
          <parameter type="gsize*" name="n_markers" />
        </parameters>
      </method>
      <constructor cname="clutter_timeline_new">
        <parameters>
          <parameter type="guint" name="n_frames" />
          <parameter type="guint" name="fps" />
        </parameters>
      </constructor>
      <constructor cname="clutter_timeline_new_for_duration">
        <parameters>
          <parameter type="guint" name="msecs" />
        </parameters>
      </constructor>
      <method name="Pause" cname="clutter_timeline_pause">
        <return-type type="void" />
      </method>
      <method name="RemoveMarker" cname="clutter_timeline_remove_marker">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="marker_name" />
        </parameters>
      </method>
      <method name="Rewind" cname="clutter_timeline_rewind">
        <return-type type="void" />
      </method>
      <method name="SetDelay" cname="clutter_timeline_set_delay">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="msecs" />
        </parameters>
      </method>
      <method name="SetDirection" cname="clutter_timeline_set_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterTimelineDirection" name="direction" />
        </parameters>
      </method>
      <method name="SetDuration" cname="clutter_timeline_set_duration">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="msecs" />
        </parameters>
      </method>
      <method name="SetLoop" cname="clutter_timeline_set_loop">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="loop" />
        </parameters>
      </method>
      <method name="SetNFrames" cname="clutter_timeline_set_n_frames">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_frames" />
        </parameters>
      </method>
      <method name="SetSpeed" cname="clutter_timeline_set_speed">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="fps" />
        </parameters>
      </method>
      <method name="Skip" cname="clutter_timeline_skip">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_frames" />
        </parameters>
      </method>
      <method name="Start" cname="clutter_timeline_start">
        <return-type type="void" />
      </method>
      <method name="Stop" cname="clutter_timeline_stop">
        <return-type type="void" />
      </method>
    </object>
    <boxed name="ActorBox" cname="ClutterActorBox">
      <field name="X1" cname="x1" type="ClutterUnit" />
      <field name="Y1" cname="y1" type="ClutterUnit" />
      <field name="X2" cname="x2" type="ClutterUnit" />
      <field name="Y2" cname="y2" type="ClutterUnit" />
      <method name="GetFromVertices" cname="clutter_actor_box_get_from_vertices" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterVertex" array="true" name="vtx" />
          <parameter type="ClutterActorBox*" name="box" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_actor_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <alias name="Angle" cname="ClutterAngle" type="gint32" />
    <struct name="AnyEvent" cname="ClutterAnyEvent">
      <field name="Type" cname="type" type="ClutterEventType" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Flags" cname="flags" type="ClutterEventFlags" />
      <field name="Stage" cname="stage" type="ClutterStage*" />
      <field name="Source" cname="source" type="ClutterActor*" />
    </struct>
    <struct name="ButtonEvent" cname="ClutterButtonEvent">
      <field name="Type" cname="type" type="ClutterEventType" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Flags" cname="flags" type="ClutterEventFlags" />
      <field name="Stage" cname="stage" type="ClutterStage*" />
      <field name="Source" cname="source" type="ClutterActor*" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="ModifierState" cname="modifier_state" type="ClutterModifierType" />
      <field name="Button" cname="button" type="guint32" />
      <field name="ClickCount" cname="click_count" type="guint" />
      <field name="Axes" cname="axes" type="gdouble*" />
      <field name="Device" cname="device" type="ClutterInputDevice*" />
      <method name="Button" cname="clutter_button_event_button">
        <return-type type="guint32" />
      </method>
    </struct>
    <boxed name="Color" cname="ClutterColor">
      <field name="Red" cname="red" type="guint8" />
      <field name="Green" cname="green" type="guint8" />
      <field name="Blue" cname="blue" type="guint8" />
      <field name="Alpha" cname="alpha" type="guint8" />
      <method name="Add" cname="clutter_color_add">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterColor*" name="src2" />
          <parameter type="ClutterColor*" name="dest" />
        </parameters>
      </method>
      <method name="Copy" cname="clutter_color_copy">
        <return-type type="ClutterColor*" owned="true" />
      </method>
      <method name="Darken" cname="clutter_color_darken">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="dest" />
        </parameters>
      </method>
      <method name="Equal" cname="clutter_color_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-ClutterColor*" name="b" />
        </parameters>
      </method>
      <method name="Free" cname="clutter_color_free">
        <return-type type="void" />
      </method>
      <method name="FromHls" cname="clutter_color_from_hls">
        <return-type type="void" />
        <parameters>
          <parameter type="guint8" name="hue" />
          <parameter type="guint8" name="luminance" />
          <parameter type="guint8" name="saturation" />
        </parameters>
      </method>
      <method name="FromHlsx" cname="clutter_color_from_hlsx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed" name="hue" />
          <parameter type="ClutterFixed" name="luminance" />
          <parameter type="ClutterFixed" name="saturation" />
        </parameters>
      </method>
      <method name="FromPixel" cname="clutter_color_from_pixel">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="pixel" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_color_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lighten" cname="clutter_color_lighten">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="dest" />
        </parameters>
      </method>
      <method name="Parse" cname="clutter_color_parse" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="color" />
          <parameter type="ClutterColor*" name="dest" />
        </parameters>
      </method>
      <method name="Shade" cname="clutter_color_shade">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="dest" />
          <parameter type="gdouble" name="shade" />
        </parameters>
      </method>
      <method name="Shadex" cname="clutter_color_shadex">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterColor*" name="dest" />
          <parameter type="ClutterFixed" name="shade" />
        </parameters>
      </method>
      <method name="Subtract" cname="clutter_color_subtract">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ClutterColor*" name="src2" />
          <parameter type="ClutterColor*" name="dest" />
        </parameters>
      </method>
      <method name="ToHls" cname="clutter_color_to_hls">
        <return-type type="void" />
        <parameters>
          <parameter type="guint8*" name="hue" />
          <parameter type="guint8*" name="luminance" />
          <parameter type="guint8*" name="saturation" />
        </parameters>
      </method>
      <method name="ToHlsx" cname="clutter_color_to_hlsx">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterFixed*" name="hue" />
          <parameter type="ClutterFixed*" name="luminance" />
          <parameter type="ClutterFixed*" name="saturation" />
        </parameters>
      </method>
      <method name="ToPixel" cname="clutter_color_to_pixel">
        <return-type type="guint32" />
      </method>
      <method name="ToString" cname="clutter_color_to_string">
        <return-type type="gchar*" />
      </method>
    </boxed>
    <struct name="CrossingEvent" cname="ClutterCrossingEvent">
      <field name="Type" cname="type" type="ClutterEventType" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Flags" cname="flags" type="ClutterEventFlags" />
      <field name="Stage" cname="stage" type="ClutterStage*" />
      <field name="Source" cname="source" type="ClutterActor*" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Device" cname="device" type="ClutterInputDevice*" />
      <field name="Related" cname="related" type="ClutterActor*" />
    </struct>
    <alias name="Fixed" cname="ClutterFixed" type="gint32" />
    <boxed name="Fog" cname="ClutterFog">
      <field name="Density" cname="density" type="ClutterFixed" />
      <field name="ZNear" cname="z_near" type="ClutterFixed" />
      <field name="ZFar" cname="z_far" type="ClutterFixed" />
      <method name="GetType" cname="clutter_fog_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <boxed name="Geometry" cname="ClutterGeometry">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="guint" />
      <field name="Height" cname="height" type="guint" />
      <method name="GetType" cname="clutter_geometry_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="IDPool" cname="ClutterIDPool" opaque="true">
      <method name="Add" cname="clutter_id_pool_add">
        <return-type type="guint32" />
        <parameters>
          <parameter type="gpointer" name="ptr" />
        </parameters>
      </method>
      <method name="Free" cname="clutter_id_pool_free">
        <return-type type="void" />
      </method>
      <method name="Lookup" cname="clutter_id_pool_lookup">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="guint32" name="id" />
        </parameters>
      </method>
      <constructor cname="clutter_id_pool_new">
        <parameters>
          <parameter type="guint" name="initial_size" />
        </parameters>
      </constructor>
      <method name="Remove" cname="clutter_id_pool_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="id" />
        </parameters>
      </method>
    </struct>
    <struct name="InputDevice" cname="ClutterInputDevice" opaque="true" />
    <struct name="KeyEvent" cname="ClutterKeyEvent">
      <field name="Type" cname="type" type="ClutterEventType" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Flags" cname="flags" type="ClutterEventFlags" />
      <field name="Stage" cname="stage" type="ClutterStage*" />
      <field name="Source" cname="source" type="ClutterActor*" />
      <field name="ModifierState" cname="modifier_state" type="ClutterModifierType" />
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="HardwareKeycode" cname="hardware_keycode" type="guint16" />
      <field name="UnicodeValue" cname="unicode_value" type="gunichar" />
      <method name="Code" cname="clutter_key_event_code">
        <return-type type="guint16" />
      </method>
      <method name="Symbol" cname="clutter_key_event_symbol">
        <return-type type="guint" />
      </method>
      <method name="Unicode" cname="clutter_key_event_unicode">
        <return-type type="guint32" />
      </method>
    </struct>
    <boxed name="Knot" cname="ClutterKnot">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <method name="Copy" cname="clutter_knot_copy">
        <return-type type="ClutterKnot*" owned="true" />
      </method>
      <method name="Equal" cname="clutter_knot_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-ClutterKnot*" name="knot_b" />
        </parameters>
      </method>
      <method name="Free" cname="clutter_knot_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="clutter_knot_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="MotionEvent" cname="ClutterMotionEvent">
      <field name="Type" cname="type" type="ClutterEventType" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Flags" cname="flags" type="ClutterEventFlags" />
      <field name="Stage" cname="stage" type="ClutterStage*" />
      <field name="Source" cname="source" type="ClutterActor*" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="ModifierState" cname="modifier_state" type="ClutterModifierType" />
      <field name="Axes" cname="axes" type="gdouble*" />
      <field name="Device" cname="device" type="ClutterInputDevice*" />
    </struct>
    <boxed name="Perspective" cname="ClutterPerspective">
      <field name="Fovy" cname="fovy" type="ClutterFixed" />
      <field name="Aspect" cname="aspect" type="ClutterFixed" />
      <field name="ZNear" cname="z_near" type="ClutterFixed" />
      <field name="ZFar" cname="z_far" type="ClutterFixed" />
      <method name="GetType" cname="clutter_perspective_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="ScrollEvent" cname="ClutterScrollEvent">
      <field name="Type" cname="type" type="ClutterEventType" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Flags" cname="flags" type="ClutterEventFlags" />
      <field name="Stage" cname="stage" type="ClutterStage*" />
      <field name="Source" cname="source" type="ClutterActor*" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Direction" cname="direction" type="ClutterScrollDirection" />
      <field name="ModifierState" cname="modifier_state" type="ClutterModifierType" />
      <field name="Axes" cname="axes" type="gdouble*" />
      <field name="Device" cname="device" type="ClutterInputDevice*" />
    </struct>
    <struct name="StageStateEvent" cname="ClutterStageStateEvent">
      <field name="Type" cname="type" type="ClutterEventType" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Flags" cname="flags" type="ClutterEventFlags" />
      <field name="Stage" cname="stage" type="ClutterStage*" />
      <field name="Source" cname="source" type="ClutterActor*" />
      <field name="ChangedMask" cname="changed_mask" type="ClutterStageState" />
      <field name="NewState" cname="new_state" type="ClutterStageState" />
    </struct>
    <struct name="TimeoutPool" cname="ClutterTimeoutPool" opaque="true">
      <method name="Add" cname="clutter_timeout_pool_add">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <constructor cname="clutter_timeout_pool_new">
        <parameters>
          <parameter type="gint" name="priority" />
        </parameters>
      </constructor>
      <method name="Remove" cname="clutter_timeout_pool_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="id" />
        </parameters>
      </method>
    </struct>
    <alias name="Unit" cname="ClutterUnit" type="gint32" />
    <boxed name="Vertex" cname="ClutterVertex">
      <field name="X" cname="x" type="ClutterUnit" />
      <field name="Y" cname="y" type="ClutterUnit" />
      <field name="Z" cname="z" type="ClutterUnit" />
      <method name="GetType" cname="clutter_vertex_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <class name="Global" cname="ClutterGlobal">
      <method name="BaseInit" cname="clutter_base_init" shared="true">
        <return-type type="void" />
      </method>
      <method name="ClearGlyphCache" cname="clutter_clear_glyph_cache" shared="true">
        <return-type type="void" />
      </method>
      <method name="DoEvent" cname="clutter_do_event" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="EventsPending" cname="clutter_events_pending" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="FixedGetType" cname="clutter_fixed_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetActorByGid" cname="clutter_get_actor_by_gid" shared="true">
        <return-type type="ClutterActor*" />
        <parameters>
          <parameter type="guint32" name="id" />
        </parameters>
      </method>
      <method name="GetDebugEnabled" cname="clutter_get_debug_enabled" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="GetDefaultBackend" cname="clutter_get_default_backend" shared="true">
        <return-type type="ClutterBackend*" />
      </method>
      <method name="GetDefaultFrameRate" cname="clutter_get_default_frame_rate" shared="true">
        <return-type type="guint" />
      </method>
      <method name="GetInputDeviceForId" cname="clutter_get_input_device_for_id" shared="true">
        <return-type type="ClutterInputDevice*" />
        <parameters>
          <parameter type="gint" name="id" />
        </parameters>
      </method>
      <method name="GetKeyboardGrab" cname="clutter_get_keyboard_grab" shared="true">
        <return-type type="ClutterActor*" />
      </method>
      <method name="GetMotionEventsEnabled" cname="clutter_get_motion_events_enabled" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="GetMotionEventsFrequency" cname="clutter_get_motion_events_frequency" shared="true">
        <return-type type="guint" />
      </method>
      <method name="GetOptionGroup" cname="clutter_get_option_group" shared="true">
        <return-type type="GOptionGroup*" />
      </method>
      <method name="GetOptionGroupWithoutInit" cname="clutter_get_option_group_without_init" shared="true">
        <return-type type="GOptionGroup*" />
      </method>
      <method name="GetPointerGrab" cname="clutter_get_pointer_grab" shared="true">
        <return-type type="ClutterActor*" />
      </method>
      <method name="GetScriptId" cname="clutter_get_script_id" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GObject*" name="gobject" />
        </parameters>
      </method>
      <method name="GetShowFps" cname="clutter_get_show_fps" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="GetTimestamp" cname="clutter_get_timestamp" shared="true">
        <return-type type="gulong" />
      </method>
      <method name="GetUseMipmappedText" cname="clutter_get_use_mipmapped_text" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="KeysymToUnicode" cname="clutter_keysym_to_unicode" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="SetDefaultFrameRate" cname="clutter_set_default_frame_rate" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="frames_per_sec" />
        </parameters>
      </method>
      <method name="SetMotionEventsEnabled" cname="clutter_set_motion_events_enabled" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enable" />
        </parameters>
      </method>
      <method name="SetMotionEventsFrequency" cname="clutter_set_motion_events_frequency" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="frequency" />
        </parameters>
      </method>
      <method name="SetUseMipmappedText" cname="clutter_set_use_mipmapped_text" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="value" />
        </parameters>
      </method>
      <method name="SquareFunc" cname="clutter_square_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
      <method name="UnitGetType" cname="clutter_unit_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="UtilNextP2" cname="clutter_util_next_p2" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="int" name="a" />
        </parameters>
      </method>
    </class>
    <class name="Effect" cname="ClutterEffect_">
      <method name="Depth" cname="clutter_effect_depth" shared="true">
        <return-type type="ClutterTimeline*" />
        <parameters>
          <parameter type="ClutterEffectTemplate*" name="template_" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="gint" name="depth_end" />
          <parameter type="ClutterEffectCompleteFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Fade" cname="clutter_effect_fade" shared="true">
        <return-type type="ClutterTimeline*" />
        <parameters>
          <parameter type="ClutterEffectTemplate*" name="template_" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="guint8" name="opacity_end" />
          <parameter type="ClutterEffectCompleteFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Move" cname="clutter_effect_move" shared="true">
        <return-type type="ClutterTimeline*" />
        <parameters>
          <parameter type="ClutterEffectTemplate*" name="template_" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="ClutterEffectCompleteFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Path" cname="clutter_effect_path" shared="true">
        <return-type type="ClutterTimeline*" />
        <parameters>
          <parameter type="ClutterEffectTemplate*" name="template_" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="const-ClutterKnot*" name="knots" />
          <parameter type="guint" name="n_knots" />
          <parameter type="ClutterEffectCompleteFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Rotate" cname="clutter_effect_rotate" shared="true">
        <return-type type="ClutterTimeline*" />
        <parameters>
          <parameter type="ClutterEffectTemplate*" name="template_" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="ClutterRotateAxis" name="axis" />
          <parameter type="gdouble" name="angle" />
          <parameter type="gint" name="center_x" />
          <parameter type="gint" name="center_y" />
          <parameter type="gint" name="center_z" />
          <parameter type="ClutterRotateDirection" name="direction" />
          <parameter type="ClutterEffectCompleteFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Scale" cname="clutter_effect_scale" shared="true">
        <return-type type="ClutterTimeline*" />
        <parameters>
          <parameter type="ClutterEffectTemplate*" name="template_" />
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="gdouble" name="x_scale_end" />
          <parameter type="gdouble" name="y_scale_end" />
          <parameter type="ClutterEffectCompleteFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
    </class>
    <class name="Event" cname="ClutterEvent_">
      <method name="Copy" cname="clutter_event_copy" shared="true">
        <return-type type="ClutterEvent*" owned="true" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="Free" cname="clutter_event_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="Get" cname="clutter_event_get" shared="true">
        <return-type type="ClutterEvent*" />
      </method>
      <method name="GetCoords" cname="clutter_event_get_coords" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetDeviceId" cname="clutter_event_get_device_id" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetSource" cname="clutter_event_get_source" shared="true">
        <return-type type="ClutterActor*" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetStage" cname="clutter_event_get_stage" shared="true">
        <return-type type="ClutterStage*" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetState" cname="clutter_event_get_state" shared="true">
        <return-type type="ClutterModifierType" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetTime" cname="clutter_event_get_time" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetType" cname="clutter_event_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="New" cname="clutter_event_new" shared="true">
        <return-type type="ClutterEvent*" />
        <parameters>
          <parameter type="ClutterEventType" name="type" />
        </parameters>
      </method>
      <method name="Peek" cname="clutter_event_peek" shared="true">
        <return-type type="ClutterEvent*" />
      </method>
      <method name="Put" cname="clutter_event_put" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
      <method name="Type" cname="clutter_event_type" shared="true">
        <return-type type="ClutterEventType" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
        </parameters>
      </method>
    </class>
    <class name="Exp" cname="ClutterExp_">
      <method name="DecFunc" cname="clutter_exp_dec_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
      <method name="IncFunc" cname="clutter_exp_inc_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
    </class>
    <class name="Feature" cname="ClutterFeature_">
      <method name="Available" cname="clutter_feature_available" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterFeatureFlags" name="feature" />
        </parameters>
      </method>
      <method name="GetAll" cname="clutter_feature_get_all" shared="true">
        <return-type type="ClutterFeatureFlags" />
      </method>
    </class>
    <class name="Frame" cname="ClutterFrame_">
      <method name="SourceAdd" cname="clutter_frame_source_add" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SourceAddFull" cname="clutter_frame_source_add_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
    </class>
    <class name="Grab" cname="ClutterGrab_">
      <method name="Keyboard" cname="clutter_grab_keyboard" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="Pointer" cname="clutter_grab_pointer" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="PointerForDevice" cname="clutter_grab_pointer_for_device" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
          <parameter type="gint" name="id" />
        </parameters>
      </method>
    </class>
    <class name="Init" cname="ClutterInit_">
      <method name="ErrorQuark" cname="clutter_init_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="WithArgs" cname="clutter_init_with_args" shared="true">
        <return-type type="ClutterInitError" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
          <parameter type="const-char*" name="parameter_string" />
          <parameter type="GOptionEntry*" name="entries" />
          <parameter type="const-char*" name="translation_domain" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </class>
    <class name="Main" cname="ClutterMain_">
      <method name="Level" cname="clutter_main_level" shared="true">
        <return-type type="gint" />
      </method>
      <method name="Quit" cname="clutter_main_quit" shared="true">
        <return-type type="void" />
      </method>
    </class>
    <class name="Param" cname="ClutterParam_">
      <method name="ColorGetType" cname="clutter_param_color_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="FixedGetType" cname="clutter_param_fixed_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SpecColor" cname="clutter_param_spec_color" shared="true">
        <return-type type="GParamSpec*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="nick" />
          <parameter type="const-gchar*" name="blurb" />
          <parameter type="const-ClutterColor*" name="default_value" />
          <parameter type="GParamFlags" name="flags" />
        </parameters>
      </method>
      <method name="SpecFixed" cname="clutter_param_spec_fixed" shared="true">
        <return-type type="GParamSpec*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="nick" />
          <parameter type="const-gchar*" name="blurb" />
          <parameter type="ClutterFixed" name="minimum" />
          <parameter type="ClutterFixed" name="maximum" />
          <parameter type="ClutterFixed" name="default_value" />
          <parameter type="GParamFlags" name="flags" />
        </parameters>
      </method>
      <method name="SpecUnit" cname="clutter_param_spec_unit" shared="true">
        <return-type type="GParamSpec*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="nick" />
          <parameter type="const-gchar*" name="blurb" />
          <parameter type="ClutterUnit" name="minimum" />
          <parameter type="ClutterUnit" name="maximum" />
          <parameter type="ClutterUnit" name="default_value" />
          <parameter type="GParamFlags" name="flags" />
        </parameters>
      </method>
      <method name="UnitGetType" cname="clutter_param_unit_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </class>
    <class name="Ramp" cname="ClutterRamp_">
      <method name="DecFunc" cname="clutter_ramp_dec_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
      <method name="Func" cname="clutter_ramp_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
      <method name="IncFunc" cname="clutter_ramp_inc_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
    </class>
    <class name="Sine" cname="ClutterSine_">
      <method name="DecFunc" cname="clutter_sine_dec_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
      <method name="Func" cname="clutter_sine_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
      <method name="HalfFunc" cname="clutter_sine_half_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
      <method name="IncFunc" cname="clutter_sine_inc_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
    </class>
    <class name="Smoothstep" cname="ClutterSmoothstep_">
      <method name="DecFunc" cname="clutter_smoothstep_dec_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
      <method name="IncFunc" cname="clutter_smoothstep_inc_func" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="ClutterAlpha*" name="alpha" />
          <parameter type="gpointer" name="dummy" />
        </parameters>
      </method>
    </class>
    <class name="Threads" cname="ClutterThreads_">
      <method name="AddFrameSource" cname="clutter_threads_add_frame_source" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddFrameSourceFull" cname="clutter_threads_add_frame_source_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="AddIdle" cname="clutter_threads_add_idle" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddIdleFull" cname="clutter_threads_add_idle_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="AddTimeout" cname="clutter_threads_add_timeout" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddTimeoutFull" cname="clutter_threads_add_timeout_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="Enter" cname="clutter_threads_enter" shared="true">
        <return-type type="void" />
      </method>
      <method name="Init" cname="clutter_threads_init" shared="true">
        <return-type type="void" />
      </method>
      <method name="Leave" cname="clutter_threads_leave" shared="true">
        <return-type type="void" />
      </method>
      <method name="SetLockFunctions" cname="clutter_threads_set_lock_functions" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GCallback" name="enter_fn" />
          <parameter type="GCallback" name="leave_fn" />
        </parameters>
      </method>
    </class>
    <class name="Ungrab" cname="ClutterUngrab_">
      <method name="Keyboard" cname="clutter_ungrab_keyboard" shared="true">
        <return-type type="void" />
      </method>
      <method name="Pointer" cname="clutter_ungrab_pointer" shared="true">
        <return-type type="void" />
      </method>
      <method name="PointerForDevice" cname="clutter_ungrab_pointer_for_device" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="id" />
        </parameters>
      </method>
    </class>
    <class name="Value" cname="ClutterValue_">
      <method name="GetColor" cname="clutter_value_get_color" shared="true">
        <return-type type="const-ClutterColor*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetFixed" cname="clutter_value_get_fixed" shared="true">
        <return-type type="ClutterFixed" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetUnit" cname="clutter_value_get_unit" shared="true">
        <return-type type="ClutterUnit" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="SetColor" cname="clutter_value_set_color" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="ClutterColor*" name="color" />
        </parameters>
      </method>
      <method name="SetFixed" cname="clutter_value_set_fixed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="ClutterFixed" name="fixed_" />
        </parameters>
      </method>
      <method name="SetUnit" cname="clutter_value_set_unit" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="ClutterUnit" name="units" />
        </parameters>
      </method>
    </class>
  </namespace>
</api>